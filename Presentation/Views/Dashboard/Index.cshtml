@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> _userManager
@inject IOptionsSnapshot<Roles> _roles;
@{
    Layout = "_DashboardLayout";
    var roles = _roles.Value;
}
@model RegisterVM;
<div>
    <div class="card">
        <h4 class="text-center pt-4">
            Mirë se vini <strong>
                @((await
                    _userManager.FindByNameAsync(User.Identity.Name)).FullName)
            </strong>
        </h4>
        <hr />
        @if (User.IsInRole(roles.KryetarIPartise))
        {
            <div class="d-flex justify-content-around p-2 pt-2">
                <div class="pt-2">
                    <p>Zgjedhni qytetin për grafe:</p>
                </div>
                <div class="col-md-4 mb-2 pe-2">
                    <select class="form-select" id="munis" onchange="getId()" asp-for="Municipality">
                        <option disabled selected>Zgjedh qytetin..</option>
                    </select>
                </div>
            </div>
        }
    </div>
</div>
<div class="col-lg-12">
    <div class="row">
        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title" id="city-nacinale"></h5>
                    <div id="columnChart"></div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title" id="city-lokale"></h5>
                    <div id="columnChart1"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (!User.IsInRole(roles.KryetarIPartise))
{
    @section Scripts
    {
    <script>
        
        //const kqzrez = "api/service/kqzresultsbymuni";
        const kqzrez = "https://localhost:7278/api/service/kqzresultsbymuni";
        let response = fetch(kqzrez).then(res => res.json());
        let rez = response.then((values) => {
            const lastYear = values.Nacionale["lastYear"];
            const thisYear = values.Nacionale["thisYear"];
            const cityName = values.Nacionale["city"];      
            const politicalSubjects = values.Nacionale["politicSubjects"];

            var selectedCity = document.getElementById("city-nacinale").innerText = `${cityName} - Zgjedhjet Nacionale`;
            var selectedCity = document.getElementById("city-lokale").innerText = `${cityName} - Zgjedhjet Lokale`;

            console.log(values)
            console.log(lastYear)
            console.log(thisYear)
            console.log(politicalSubjects)

            new ApexCharts(document.querySelector("#columnChart"), {
                series: [{
                    name: 'Viti 2021',
                    data: [lastYear[politicalSubjects[0]], lastYear[politicalSubjects[1]], lastYear[politicalSubjects[2]], lastYear[politicalSubjects[3]], lastYear[politicalSubjects[4]], lastYear[politicalSubjects[5]], lastYear[politicalSubjects[6]], lastYear[politicalSubjects[7]]]
                }, {
                    name: 'Tani',
                    data: [thisYear[politicalSubjects[0]], thisYear[politicalSubjects[1]], thisYear[politicalSubjects[2]], thisYear[politicalSubjects[3]], thisYear[politicalSubjects[4]], thisYear[politicalSubjects[5]], thisYear[politicalSubjects[6]], thisYear[politicalSubjects[7]]]
                }],
                chart: {
                    type: 'bar',
                    height: 350
                }, colors: ['#339af0', '#f76707'],
                stroke: {
                    curve: 'smooth',
                    width: 0.5,
                },
                plotOptions: {
                    bar: {
                        horizontal: false,
                        columnWidth: '55%',
                        endingShape: 'rounded'
                    },
                },
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    show: true,
                    width: 2,
                    colors: ['transparent']
                },
                xaxis: {
                    categories: politicalSubjects,
                },
                fill: {
                    opacity: 1,
                    colors: ['#339af0', '#f76707']
                },
                tooltip: {
                    y: {
                        formatter: function (val) {
                            return " " + val + " vota"
                        }
                    }
                }
            }).render();
        })

        response.then((results) => {
            const lastYearLocal = results.Lokale["lastYear"]
            const thisYearLocal = results.Lokale["thisYear"]

            const politicalSubjects = results.Nacionale["politicSubjects"];

            new ApexCharts(document.querySelector("#columnChart1"), {
                series: [{
                    name: 'Viti 2021',
                    data: [lastYearLocal[politicalSubjects[0]], lastYearLocal[politicalSubjects[1]], lastYearLocal[politicalSubjects[2]], lastYearLocal[politicalSubjects[3]], lastYearLocal[politicalSubjects[4]], lastYearLocal[politicalSubjects[5]], lastYearLocal[politicalSubjects[6]], lastYearLocal[politicalSubjects[7]]]
                }, {
                    name: 'Tani',
                    data: [thisYearLocal[politicalSubjects[0]], thisYearLocal[politicalSubjects[1]], thisYearLocal[politicalSubjects[2]], thisYearLocal[politicalSubjects[3]], thisYearLocal[politicalSubjects[4]], thisYearLocal[politicalSubjects[5]], thisYearLocal[politicalSubjects[6]], thisYearLocal[politicalSubjects[7]]]
                }],
                chart: {
                    type: 'bar',
                    height: 350
                }, colors: ['#339af0', '#f76707'],
                stroke: {
                    curve: 'smooth',
                    width: 0.5,
                },
                plotOptions: {
                    bar: {
                        horizontal: false,
                        columnWidth: '55%',
                        endingShape: 'rounded'
                    },
                },
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    show: true,
                    width: 2,
                    colors: ['transparent']
                },
                xaxis: {
                    categories: politicalSubjects
                },
                fill: {
                    opacity: 1,
                    colors: ['#339af0', '#f76707']
                },
                tooltip: {
                    y: {
                        formatter: function (val) {
                            return " " + val + " vota"
                        }
                    }
                }
            }).render();
        })
    </script>
}
}
else
{
    @section Scripts
    {
    <script>
        const munis = document.querySelector('#munis');
        //const url = "https://eregisterpbc-001-site1.atempurl.com/"
        const url = "https:localhost:7278/api/service/";
        getMunis();
        function getMunis(id) {
            let endpoint = url + "getmunis";
            let result = fetch(endpoint)
                .then(res => res.json())
                .then(data => {
                    data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        munis.appendChild(item);
                    });
                });
        }
        function getId() {
            var select = document.getElementById("munis").value

            console.log(select)
            const kqzrez = "https://localhost:7278/api/service/kqzresultsbymuni?id=" + select;
            let response = fetch(kqzrez).then(res => res.json());
            let rez = response.then((values) => {
                const lastYear = values.Nacionale["lastYear"];
                const thisYear = values.Nacionale["thisYear"];
                const cityName = values.Nacionale["city"];
                const politicalSubjects = values.Nacionale["politicSubjects"];

                var selectedCity = document.getElementById("city-nacinale").innerText = `${cityName} - Zgjedhjet Nacionale`;
                var selectedCity = document.getElementById("city-lokale").innerText = `${cityName} - Zgjedhjet Lokale`;

                console.log(values)
                console.log(lastYear)
                console.log(thisYear)
                console.log(politicalSubjects)

                new ApexCharts(document.querySelector("#columnChart"), {
                    series: [{
                        name: 'Viti 2021',
                        data: [lastYear[politicalSubjects[0]], lastYear[politicalSubjects[1]], lastYear[politicalSubjects[2]], lastYear[politicalSubjects[3]], lastYear[politicalSubjects[4]], lastYear[politicalSubjects[5]], lastYear[politicalSubjects[6]], lastYear[politicalSubjects[7]]]
                    }, {
                        name: 'Tani',
                        data: [thisYear[politicalSubjects[0]], thisYear[politicalSubjects[1]], thisYear[politicalSubjects[2]], thisYear[politicalSubjects[3]], thisYear[politicalSubjects[4]], thisYear[politicalSubjects[5]], thisYear[politicalSubjects[6]], thisYear[politicalSubjects[7]]]
                    }],
                    chart: {
                        type: 'bar',
                        height: 350
                    }, colors: ['#339af0', '#f76707'],
                    stroke: {
                        curve: 'smooth',
                        width: 0.5,
                    },
                    plotOptions: {
                        bar: {
                            horizontal: false,
                            columnWidth: '55%',
                            endingShape: 'rounded'
                        },
                    },
                    dataLabels: {
                        enabled: false
                    },
                    stroke: {
                        show: true,
                        width: 2,
                        colors: ['transparent']
                    },
                    xaxis: {
                        categories: politicalSubjects,
                    },
                    fill: {
                        opacity: 1,
                        colors: ['#339af0', '#f76707']
                    },
                    tooltip: {
                        y: {
                            formatter: function (val) {
                                return " " + val + " vota"
                            }
                        }
                    }
                }).render();
            })

            response.then((results) => {
                const lastYearLocal = results.Lokale["lastYear"]
                const thisYearLocal = results.Lokale["thisYear"]

                const politicalSubjects = results.Nacionale["politicSubjects"];

                new ApexCharts(document.querySelector("#columnChart1"), {
                    series: [{
                        name: 'Viti 2021',
                        data: [lastYearLocal[politicalSubjects[0]], lastYearLocal[politicalSubjects[1]], lastYearLocal[politicalSubjects[2]], lastYearLocal[politicalSubjects[3]], lastYearLocal[politicalSubjects[4]], lastYearLocal[politicalSubjects[5]], lastYearLocal[politicalSubjects[6]], lastYearLocal[politicalSubjects[7]]]
                    }, {
                        name: 'Tani',
                        data: [thisYearLocal[politicalSubjects[0]], thisYearLocal[politicalSubjects[1]], thisYearLocal[politicalSubjects[2]], thisYearLocal[politicalSubjects[3]], thisYearLocal[politicalSubjects[4]], thisYearLocal[politicalSubjects[5]], thisYearLocal[politicalSubjects[6]], thisYearLocal[politicalSubjects[7]]]
                    }],
                    chart: {
                        type: 'bar',
                        height: 350
                    }, colors: ['#339af0', '#f76707'],
                    stroke: {
                        curve: 'smooth',
                        width: 0.5,
                    },
                    plotOptions: {
                        bar: {
                            horizontal: false,
                            columnWidth: '55%',
                            endingShape: 'rounded'
                        },
                    },
                    dataLabels: {
                        enabled: false
                    },
                    stroke: {
                        show: true,
                        width: 2,
                        colors: ['transparent']
                    },
                    xaxis: {
                        categories: politicalSubjects
                    },
                    fill: {
                        opacity: 1,
                        colors: ['#339af0', '#f76707']
                    },
                    tooltip: {
                        y: {
                            formatter: function (val) {
                                return " " + val + " vota"
                            }
                        }
                    }
                }).render();
            })
        }

    </script>
}
}
