@using Application.ViewModels
@{
    Layout = "_DashboardLayout";
    int[] kqz = { 24, 41, 55, 13, 18, 10, 9, 10 };
    int[] addvoter = { 40, 48, 60, 22, 25, 20, 22, 12 };
}
@model RegisterVM;
<div>
    <div class = "card">
        <h4 class = "text-center pt-4">Mirë se vini <strong> @User.Identity.Name</strong> </h4>
        <hr/>
        <div class = "d-flex justify-content-around p-2 pt-2">
            <div class = "pt-2">
                <p>Zgjedhni qytetin për grafe:</p>
            </div>
            <div class="col-md-4 mb-2 pe-2">
                <select class="form-select" id="munis" asp-for="Municipality">
                    <option disabled selected>Zgjedh qytetin..</option>
                </select>
            </div>
        </div>
        
    </div>
</div>
<div class="col-lg-12">
    <div class="row">

        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Komuna e Prishtines - Zgjedhjet Nacionale</h5>

                    <!-- Column Chart -->
                    <div id="columnChart"></div>

                    <script>
                        const kqzrez = "https://localhost:7278/api/service/kqzresults";
                        let response = fetch(kqzrez).then(res => res.json());
                        let rez = response.then((values) => {
                            console.log(values)
                            new ApexCharts(document.querySelector("#columnChart"), {
                                series: [{
                                    name: 'Viti 2021',
                                    data: [values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7]]
                                }, {
                                    name: 'Tani',
                                    data: [values[0], values[1], values[2], values[3], values[4], values[5], values[6], values[7]]
                                }],
                                chart: {
                                    type: 'bar',
                                    height: 350
                                }, colors: ['#339af0', '#f76707'],
                                stroke: {
                                    curve: 'smooth',
                                    width: 0.5,
                                },
                                plotOptions: {
                                    bar: {
                                        horizontal: false,
                                        columnWidth: '55%',
                                        endingShape: 'rounded'
                                    },
                                },
                                dataLabels: {
                                    enabled: false
                                },
                                stroke: {
                                    show: true,
                                    width: 2,
                                    colors: ['transparent']
                                },
                                xaxis: {
                                    categories: ['LDK', 'PDK', 'VV', 'AAK', 'AKR', 'Nisma', 'Minoritetet Serb', 'Minoritetet'],
                                },
                                fill: {
                                    opacity: 1,
                                    colors: ['#339af0', '#f76707']
                                },
                                tooltip: {
                                    y: {
                                        formatter: function (val) {
                                            return " " + val + " vota"
                                        }
                                    }
                                }
                            }).render();
                        })
                    </script>
                    <!-- End Column Chart -->

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
<script>
    const munis = document.querySelector('#munis');
    const url = "https://localhost:7278/api/service/";
    getMunis();
        function getMunis(id){
            let endpoint = url + "getmunis";
            let result = fetch(endpoint)
            .then(res => res.json())
            .then(data => {
                data.forEach(x => {
                    let item = document.createElement("option");
                    item.value = x.id;
                    item.innerText = x.name;
                    munis.appendChild(item);
                });
            });
        }
    
</script>
}