@using Application.ViewModels
@{
    Layout = "_DashboardLayout";
}
@model RegisterVM;
<div>
    <div class="card">
        <h4 class="text-center pt-4">Mirë se vini <strong> @User.Identity.Name</strong> </h4>
        <hr />
        @if (User.IsInRole("SuperAdmin"))
        {
            <div class="d-flex justify-content-around p-2 pt-2">
                <div class="pt-2">
                    <p>Zgjedhni qytetin për grafe:</p>
                </div>
                <div class="col-md-4 mb-2 pe-2">
                    <select class="form-select" id="munis" asp-for="Municipality">
                        <option disabled selected>Zgjedh qytetin..</option>
                    </select>
                </div>
            </div>
        }


    </div>
</div>
<div class="col-lg-12">
    <div class="row">
        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Komuna e Prishtines - Zgjedhjet Nacionale</h5>
                    <div id="columnChart"></div>
                    <script>
                        const kqzrez = "https://localhost:7278/api/service";
                        var endpoint = "/kqzresultsbymuni";
                        let response = fetch(`${kqzrez}${endpoint}`).then(res => res.json());
                        let rez = response.then((values) => {

                            const lastYear = values.Nacionale["lastYear"]
                            const thisYear = values.Nacionale["thisYear"]
                            const lastYearValues = Object.values(lastYear);
                            const thisYearValues = Object.values(thisYear);


                            new ApexCharts(document.querySelector("#columnChart"), {
                                series: [{
                                    name: 'Viti 2021',
                                    
                                    data: [lastYearValues[0], lastYearValues[1], lastYearValues[2], lastYearValues[3], lastYearValues[4], lastYearValues[5], lastYearValues[6], lastYearValues[7]]
                                }, {
                                    name: 'Tani',
                                    data: [thisYearValues[0], thisYearValues[1], thisYearValues[2], thisYearValues[3], thisYearValues[4], thisYearValues[5], thisYearValues[6], thisYearValues[7]]
                                }],
                                chart: {
                                    type: 'bar',
                                    height: 350
                                }, colors: ['#339af0', '#f76707'],
                                stroke: {
                                    curve: 'smooth',
                                    width: 0.5,
                                },
                                plotOptions: {
                                    bar: {
                                        horizontal: false,
                                        columnWidth: '55%',
                                        endingShape: 'rounded'
                                    },
                                },
                                dataLabels: {
                                    enabled: false
                                },
                                stroke: {
                                    show: true,
                                    width: 2,
                                    colors: ['transparent']
                                },
                                xaxis: {
                                    categories: ['LDK', 'PDK', 'VV', 'AAK', 'AKR', 'Nisma', 'Minoritetet Serb', 'Minoritetet'],
                                },
                                fill: {
                                    opacity: 1,
                                    colors: ['#339af0', '#f76707']
                                },
                                tooltip: {
                                    y: {
                                        formatter: function (val) {
                                            return " " + val + " vota"
                                        }
                                    }
                                }
                            }).render();
                        })
                    </script>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Komuna e Prishtines - Zgjedhjet Lokale</h5>
                    <div id="columnChart1"></div>
                    <script>
                        let res = response.then((results) => {

                            const lastYearLocal = results.Lokale["lastYear"]
                            const thisYearLocal = results.Lokale["thisYear"]
                            const lastYearValuesLocal = Object.values(lastYearLocal);
                            const thisYearValuesLocal = Object.values(thisYearLocal);

                            new ApexCharts(document.querySelector("#columnChart1"), {
                                series: [{
                                    name: 'Viti 2021',

                                    data: [lastYearValuesLocal[0], lastYearValuesLocal[1], lastYearValuesLocal[2], lastYearValuesLocal[3], lastYearValuesLocal[4], lastYearValuesLocal[5], lastYearValuesLocal[6], lastYearValuesLocal[7]]
                                }, {
                                    name: 'Tani',
                                    data: [thisYearValuesLocal[0], thisYearValuesLocal[1], thisYearValuesLocal[2], thisYearValuesLocal[3], thisYearValuesLocal[4], thisYearValuesLocal[5], thisYearValuesLocal[6], thisYearValuesLocal[7]]
                                }],
                                chart: {
                                    type: 'bar',
                                    height: 350
                                }, colors: ['#339af0', '#f76707'],
                                stroke: {
                                    curve: 'smooth',
                                    width: 0.5,
                                },
                                plotOptions: {
                                    bar: {
                                        horizontal: false,
                                        columnWidth: '55%',
                                        endingShape: 'rounded'
                                    },
                                },
                                dataLabels: {
                                    enabled: false
                                },
                                stroke: {
                                    show: true,
                                    width: 2,
                                    colors: ['transparent']
                                },
                                xaxis: {
                                    categories: ['LDK', 'PDK', 'VV', 'AAK', 'AKR', 'Nisma', 'Minoritetet Serb', 'Minoritetet'],
                                },
                                fill: {
                                    opacity: 1,
                                    colors: ['#339af0', '#f76707']
                                },
                                tooltip: {
                                    y: {
                                        formatter: function (val) {
                                            return " " + val + " vota"
                                        }
                                    }
                                }
                            }).render();
                        })
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
<script>
    const munis = document.querySelector('#munis');
    const url = "https://localhost:7278/api/service/";
    getMunis();
        function getMunis(id){
            let endpoint = url + "getmunis";
            let result = fetch(endpoint)
            .then(res => res.json())
            .then(data => {
                data.forEach(x => {
                    let item = document.createElement("option");
                    item.value = x.id;
                    item.innerText = x.name;
                    munis.appendChild(item);
                });
            });
        }
    
</script>
}