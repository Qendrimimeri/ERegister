@using Application.Repository
@using Application.ViewModels
@using Domain.Data.Entities
@{
    Layout = "_DashboardLayout";
}
@model RegisterVM;
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> _userManager
@inject IUnitOfWork _unitOfWork;
@{
    var userId = await _userManager.FindByNameAsync(User.Identity.Name);
    var userMuniId = await _unitOfWork.ApplicationUser.GetMunicipalityIdOfUser(userId.Id);
    var userVillageId = await _unitOfWork.ApplicationUser.GetVillageIdOfUser((userId.Id));
    var userNeigborhoodId = await _unitOfWork.ApplicationUser.GetNeigborhoodIdOfUser((userId.Id));
}
<style>

    @@media screen and (max-width:502px) {
        .button-responsive {
            font-size: 14px;
        }
    }

    @@media screen and (max-width:462px) {
        .button-responsive {
            font-size: 12px;
        }
    }

    @@media screen and (max-width:425px) {
        .button-responsive {
            font-size: 10px;
        }
    }

    @@media screen and (max-width:379px) {
        .button-responsive {
            font-size: 8px;
        }

        input::placeholder {
            font-size: 13px;
        }

        .option-select {
            font-size: 13px;
        }
    }

   
   .test{
        background-color: #0d6efd;
        
    }
    .test:hover{
        background-color:#0b5ed7;
        
    }
    .swal-button--catch:hover{
        background-color:#0d6efd;
    }

    .swal-button:not([disabled]):hover {
        background-color:#0b5ed7;

    }
    .swal-button--cancel{
        background-color :#dc3545;
        color : white;
    }
    .swal-button--cancel:not([disabled]):hover {

          background-color:#bb2d3b;
    }
   
    .swal-content__input:focus{
         border-color : #ced4da;
         border-bottom: 3px solid #ced4da;
    }
    .swal-text {
       font-weight:500;
        font-size:20px;
    }
     .swal-button--confirm {
         background-color : #0d6efd;
     }

</style>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<section class="section">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h2 class="card-title ">Regjistro të dhënat për votuesin</h2>
                    <form asp-action="Register" asp-controller="AddsAdmin" method="post" id="listform">
                        <h6 class="pt-4">I - Të dhënat personale</h6>
                        <hr>
                        <div class="pb-3 d-flex pe-2 justify-content-between">
                            <div class="col-12 p">
                                <label asp-for="FullName" class="">Emri dhe mbiemri</label>
                                <input class="form-control" asp-for="FullName" placeholder="Shkruaj emrin dhe mbiemrin">
                                <span asp-validation-for="FullName" class="text-danger"></span>
                            </div>
                        </div>
                        <span>Numri i telefonit</span>
                        <div class="pb-3 pe-2">
                            <div class=" d-flex align-items-center flex-sm-row">
                                <div class="col-4 col-sm-2">
                                    <input type="text" class="form-control" id="prefix" value="+383">
                                </div>
                                <div class="col-8 ps-2 col-sm-10">
                                    <input class="form-control" asp-for="PhoneNumber" type="number" placeholder="49123123">
                                </div>
                            </div>
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                            <span class="text-danger"></span>
                        </div>
                        <div class="form-group pb-3 pe-2">
                            <label for="exampleInputEmail1">Email adresa</label>
                            <input type="email" class="form-control" id="exampleInputEmail1" asp-for="Email" placeholder="Shkruaj email adresen">
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                        <div class="form-group pb-3 pe-2">
                            <label for="InputFacebook">Facebook</label>
                            <input type="text" class="form-control" asp-for="Facebook" id="InputFacebook">
                        </div>
                        <div class="d-flex justify-content-between flex-md-row flex-column">
                            @if (User.IsInRole("KryetarIPartise"))
                            {
                                <div class="col-md-4 mb-3 pe-2">
                                    <label asp-for="Municipality">Qyteti</label>
                                    <select class="form-select option-select" asp-for="Municipality" id="munis">
                                        <option disabled selected class="option-select">Zgjedh qytetin...</option>
                                    </select>
                                    <span asp-validation-for="Municipality" class="text-danger"></span>
                                </div>
                                <div class="col-md-4 mb-3 pe-2">
                                    <label>Fshati</label>
                                    <select class="form-select fshati-selected option-select" asp-for="Village" id="villages">
                                        <option value=" " disabled selected selectcard>Zgjedh fshatin...</option>
                                    </select>
                                </div>
                                <div id="neigborhoods-container" class="col-md-4 mb-3 pe-2">
                                    <label>Lagja</label>
                                    <select class="form-select option-select" asp-for="Neigborhood" id="neigborhoods">
                                        <option disabled selected>Zgjedh lagjen...</option>
                                    </select>
                                </div>
                                <div id="neigborhoodsVillage-container" class="col-md-4 mb-3 pe-2">
                                    <label>Lagja</label>
                                    <select class="form-select option-select" asp-for="Neigborhood" id="neigborhoodsVillage">
                                        <option disabled selected>Zgjedh lagjen...</option>
                                    </select>
                                </div>
                            }
                            @if (User.IsInRole("KryetarIKomunes"))
                            {
                                <div class="col-md-6 mb-3 pe-2">
                                    <label>Fshati</label>
                                    <select class="form-select fshati-selected option-select" asp-for="Village" id="villages">
                                        <option value=" " disabled selected selectcard>Zgjedh fshatin...</option>
                                    </select>
                                </div>
                                <div id="neigborhoods-container" class="col-md-6 mb-3 pe-2">
                                    <label>Lagja</label>
                                    <select class="form-select option-select" asp-for="Neigborhood" id="neigborhoods">
                                        <option disabled selected>Zgjedh lagjen...</option>
                                    </select>
                                </div>
                                <div id="neigborhoodsVillage-container" class="col-md-6 mb-3 pe-2">
                                    <label>Lagja</label>
                                    <select class="form-select option-select" asp-for="Neigborhood" id="neigborhoodsVillage">
                                        <option disabled selected>Zgjedh lagjen...</option>
                                    </select>
                                </div>
                            }
                        </div>
                        @if (User.IsInRole("KryetarIFshatit"))
                        {
                            <div class=" d-flex justify-content-between flex-sm-row flex-column">
                                <div id="neigborhoodsVillage-container" class="col-md-4 mb-3 pe-2">
                                    <label>Lagja</label>
                                    <select class="form-select option-select" asp-for="Neigborhood" id="neigborhoodsVillage">
                                        <option disabled selected>Zgjedh lagjen...</option>
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3 pe-2" id="streetByVillage">
                                    <label>Rruga</label>
                                    <select class="form-select option-select" asp-for="Street" id="streets">
                                        <option disabled selected>Zgjedh rrugën...</option>
                                    </select>
                                </div>
                                <div class=col-md-4 mb-3 pe-2" id="streetByNeighborhood">
                                    <label>Rruga</label>
                                    <select class="form-select option-select" asp-for="Street" id="streetsNeighborhood">
                                        <option disabled selected>Zgjedh rrugën...</option>
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3 pe-2">
                                    <label class="">Numri i shtëpisë</label>
                                    <input class="form-control" placeholder="opsionale" asp-for="HouseNo">
                                    <span class="text-danger"></span>
                                </div>
                            </div>
                        }
                        @if (User.IsInRole("KryetarIPartise") || User.IsInRole("KryetarIKomunes") || User.IsInRole("AnetarIThjeshte"))
                        {
                            <div class="mb-4 d-flex justify-content-between flex-md-row flex-column">
                                <div class="col-md-4 mb-2 pe-2" id="streetByVillage">
                                    <label>Rruga</label>
                                    <select class="form-select option-select" asp-for="Street" id="streets">
                                        <option disabled selected>Zgjedh rrugën...</option>
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3 pe-2" id="streetByNeighborhood">
                                    <label>Rruga</label>
                                    <select class="form-select option-select" asp-for="Street" id="streetsNeighborhood">
                                        <option disabled selected>Zgjedh rrugën...</option>
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3 pe-2">
                                    <label>Blloku</label>
                                    <select class="form-select option-select" asp-for="Block" id="blocks">
                                        <option disabled selected>Zgjedh bllokun...</option>
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3 pe-2">
                                    <label class="">Numri i shtëpisë</label>
                                    <input class="form-control option-select" placeholder="opsionale" asp-for="HouseNo">
                                    <span class="text-danger"></span>
                                </div>
                            </div>
                        }
                            
                        <h6 class="pt-4">II - Të dhënat profesionale</h6><hr>

                        <div class=" mb-4 d-flex justify-content-between flex-md-row flex-column">

                            <div class="col-md-4 mb-3 pe-2">
                                <label class="">Vendi i punës</label>
                                <input asp-for="WorkPlace" class="form-control">
                                <span class="text-danger"></span>
                            </div>
                            <div class="col-md-4 mb-2 pe-2 ">
                                <label>Shërbimi</label>
                                <select class="form-select " asp-for="AdministrativeUnit" id="inputGroupSelect04" asp-items="@ViewBag.administrativeUnits">
                                    <option disabled selected>Zgjedh shërbimin...</option>
                                </select>
                            </div>
                            <div class="col-md-4 mb-3 pe-2">
                                <label class="l">Detyra</label>
                                <input asp-for="Duty" class="form-control">
                                <span class="text-danger"></span>
                            </div>
                        </div>
                        <h6 class="pt-4">III - Të dhënat partiake<hr></h6>
                        <div class="d-flex justify-content-between flex-sm-row flex-column">
                            <div class="col-sm-6 mb-2 pe-2">
                                <label for="FamilyMember" class="">Numri i anëtarëve</label>

                                <input asp-for="FamMembers" type="number" class="form-control" id="FamilyMember">
                                <span asp-validation-for="FamMembers" class="text-danger"></span>
                            </div>
                            <div class="col-sm-6 mb-3 pe-2">
                                <label>Gjasat e suksesit fillestar</label>
                                <select class="form-select" id="inputGroupSelect05" asp-for="SuccessChance" placeorder="Zgjedh gjasat..." asp-items="@ViewBag.successChances">
                                </select>
                            </div>
                        </div>
                        <div class="mb-4 d-flex justify-content-between flex-sm-row flex-column">
                            <div class="col-sm-6 mb-3 pe-2">
                                <label>Votues i tanishëm</label>
                                <select class="form-select option-select" id="inputGroupSelect04" asp-for="PoliticalSubject" asp-items="@ViewBag.PS" required>
                                    <option disabled selected>Zgjedh partinë...</option>
                                </select>
                            </div>
                            <div class="col-sm-6 mb-3 pe-2" id="pollcenter-villages-container">
                                <label>Qendra e votimit</label>
                                <select class="form-select option-select" id="poll" asp-for="PollCenter">
                                    <option disabled selected>Zgjedh qendren e votimit...</option>
                                </select>
                            </div>
                            <div class="col-sm-6 mb-3 pe-2" id="pollcenter-neighborhood-container">
                                <label>Qendra e votimit</label>
                                <select class="form-select option-select" id="pollNeighborhood" asp-for="PollCenter">
                                    <option disabled selected>Zgjedh qendren e votimit...</option>
                                </select>
                                <span asp-validation-for="PollCenter" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="d-flex flex-row justify-content-end pe-2 pt-3 button-responsive">
                            <a href='javascript:
                               swal({
                               title: "A jeni të sigurtë?" ,
                               icon: "warning" ,
                                         buttons: {
                                         cancel:"Anulo",
                                      confirm:{
                                    text:"Konfirmo",
                                  className:"test",
                                } }
                               })
                               .then((willDelete)=>
                                {
                                if (willDelete) {
                                swal({ title: "U anulua me sukses!",
                                icon: "success"}).then(okay => {
                                if (okay) {
                                window.location.href = "/AddsAdmin/AddVoter";
                                }
                                });
                                } else {
                                swal({
                                title: "Te dhënat nuk janë anuluar!",
                                icon: "error",

                                });
                                }
                                });' class = "btn btn-danger button-responsive">Anulo
                            </a>&nbsp&nbsp


                            <button asp-action="SaveAndOpenCase" asp-controller="AddsAdmin" class="btn btn-primary pe-2 button-responsive">Ruaj dhe hap rast</button>&nbsp&nbsp
                            <button type="submit" class="btn btn-primary pe-2 button-responsive">Ruaj dhe mbyll</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
@if (User.IsInRole("KryetarIKomunes"))
{
    @section Scripts
    {
<script>

    $('#neigborhoodsVillage-container').hide();

    $('#villages').change(function(){
        var selectedVillage = $(this).children('option:selected').val();
        if(selectedVillage != null){
            $('#neigborhoods-container').hide();
            $('#neigborhoodsVillage-container').show();
        }
    })
    $('#munis').change(function(){
        var selectedMunis = $(this).children('option:selected').val();
        if(selectedMunis != null){
            $('#neigborhoods-container').show();
            $('#neigborhoodsVillage-container').hide();
        }
    });

    $('#streetByVillage').hide();

    $('#neighborhoods').change(function(){
        var selectedNeighborhood = $(this).children('option:selected').val();
        if(selectedNeighborhood != null){
            $('#streetByVillage').hide();
            $('#streetByNeighborhood').show();
        }
    })
    $('#villages').change(function(){
        var selectedVillages = $(this).children('option:selected').val();
        if(selectedVillages != null){
            $('#streetByVillage').show();
            $('#streetByNeighborhood').hide();
        }
    })

    $('#pollcenter-villages-container').hide();

    $('#neigborhoods').change(function(){
        var selectedVillage = $(this).children('option:selected').val();
        if(selectedVillage != null){
            $('#pollcenter-villages-container').hide();
            $('#pollcenter-neighborhood-container').show();
        }
    })
    $('#villages').change(function(){
        var selectedNeighborhood = $(this).children('option:selected').val();
        if(selectedNeighborhood != null){
            $('#pollcenter-villages-container').show();
            $('#pollcenter-neighborhood-container').hide();
        }
    });
</script>
<script>
     const url = "https://localhost:7278/api/service/";
     if (document.querySelector("#munis") != undefined)
     {
         getMunis();
     }
     else {
         addVillagesToList(@userMuniId);
         addNeigborhoodToList(@userMuniId);
         addBlockToList(@userMuniId);
     }
     villages.addEventListener('change', event=>{
         if(event.target.value !== "shto")
         {
             addNeigborhoodVillageToList(event.target.value);
             addStreetToList(event.target.value);
             addPollCenterToList(event.target.value);
         }
         else {

         }
     });
     neigborhoods.addEventListener('change', event =>{
          if(event.target.value !== "shto")
         {
         addStreetNeighborhoodToList(event.target.value);
         addPollCenterNeighborhoodToList(event.target.value);
         }
         else{

         }
     });
     villages.addEventListener('change', event => {
         event.preventDefault()
           if (event.target.value == 'shto'){
             addVillageToDb(@userMuniId);
         }
     });
     neigborhoods.addEventListener('change', event => {
         event.preventDefault()
           if (event.target.value == 'shto') {
             addNeigborhoodToDb(@userMuniId);
             }
     });
     blocks.addEventListener('change', event => {
        event.preventDefault()
           if (event.target.value == 'shto') {
            addBlockToDb(@userMuniId);
            }
     });
     streets.addEventListener('change', event => {
         event.preventDefault()
         if (event.target.value == 'shto') {
             addStreetToDb();
         }
     });
     neigborhoodsVillage.addEventListener('change', event => {
         event.preventDefault()
         if (event.target.value == "shto") {
             addNeigborhoodVillageToDb();
         }
     });
     streetsNeighborhood.addEventListener('change', event => {
         event.preventDefault()
         if (event.target.value == "shto") {
             addStreetNeighborhoodToDb();
         }
     });

     function getMunis(userId){
     let endpoint = url + "getmunis";
     let result = fetch(endpoint)
     .then(res => res.json())
     .then(data => {
         data.forEach(x => {
             let item = document.createElement("option");
             item.value = x.id;
             item.innerText = x.name;
         });
     });
     }
     //villages
     function addVillagesToList(userMuniId) {
         villages.innerHTML = '';
         let chooseOption = document.createElement("option");
         chooseOption.innerText = "Zgjedh fshatin...";
         chooseOption.selected = true;
         chooseOption.disabled = true;
         villages.appendChild(chooseOption);

         let addOption = document.createElement("option");
         addOption.innerText = "Shto fshat te ri...";
         addOption.value = "shto";
         villages.appendChild(addOption);

         let endpoint = url + "GetVillagesByMuni?muniid=" + userMuniId;
         let result = fetch(endpoint)
             .then(res => res.json())
             .then(data => data.forEach(x => {
                 let item = document.createElement("option");
                 item.value = x.id;
                 item.innerText = x.name;
                 villages.appendChild(item);
             }));
     }
     function addVillageToDb(userMuniId) {
         let endpoint = url + "addvillage";
         let input =swal("Shto fshat të ri:", {
         content: "input",
         })
         .then((value) => {
         fetch(endpoint, {
             headers: {
                 'Accept': 'application/json',
                 'Content-Type': 'application/json'
             },
             method: 'post',
             body: JSON.stringify({ MunicipalityId: userMuniId, villageName: value })
         }).then(() => addVillagesToList(userMuniId));
         });
     }
     //neigborhoods
     function addNeigborhoodToList(userMuniId) {
         neigborhoods.innerHTML = '';
         let chooseOption = document.createElement("option");
         chooseOption.innerText = "Zgjedh lagjen...";
         chooseOption.selected = true;
         chooseOption.disabled = true;
         neigborhoods.appendChild(chooseOption);

         let addOption = document.createElement("option");
         addOption.innerText = "Shto lagjen e re...";
         addOption.value = "shto";
         neigborhoods.appendChild(addOption);

         let endpoint = url + "getneighborhoodsbymuni?muniId=" + userMuniId;
         let result = fetch(endpoint)
             .then(res => res.json())
             .then(data => data.forEach(x => {
                 let item = document.createElement("option");
                 item.value = x.id;
                 item.innerText = x.name;
                 neigborhoods.appendChild(item);
             }));
     }
     function addNeigborhoodToDb(userMuniId) {
         let endpoint = url + "addneighborhood";
         let input =swal("Shto lagje te re :",{
             content:"input",
         })
         .then((value)=>{
         fetch(endpoint, {
             headers: {
                 'Accept': 'application/json',
                 'Content-Type': 'application/json'
             },
             method: 'post',
             body: JSON.stringify({ MunicipalityId: userMuniId, neighborhoodName: value })
         }).then(() => addNeigborhoodToList(userMuniId));
         });
     }
     //neigborhood by village
     function addNeigborhoodVillageToList(villId) {
         neigborhoodsVillage.innerHTML = '';
         let chooseOption = document.createElement("option");
         chooseOption.innerText = "Zgjedh lagjen...";
         chooseOption.selected = true;
         chooseOption.disabled = true;
         neigborhoodsVillage.appendChild(chooseOption);

         let addOption = document.createElement("option");
         addOption.innerText = "Shto lagjen e re...";
         addOption.value = "shto";
         neigborhoodsVillage.appendChild(addOption);

         let endpoint = url + "getneighborhoodsbyvillage?villId=" + villId;
         let result = fetch(endpoint)
             .then(res => res.json())
             .then(data => data.forEach(x => {
                 let item = document.createElement("option");
                 item.value = x.id;
                 item.innerText = x.name;
                 neigborhoodsVillage.appendChild(item);
             }));
     }
     //neigborhood by village
     function addNeigborhoodVillageToList(villId){
         neigborhoodsVillage.innerHTML = '';
         let chooseOption = document.createElement("option");
         chooseOption.innerText = "Zgjedh lagjen...";
         chooseOption.selected = true;
         chooseOption.disabled = true;
         neigborhoodsVillage.appendChild(chooseOption);

         let addOption = document.createElement("option");
         addOption.innerText = "Shto lagjen e re...";
         addOption.value = "shto";
         neigborhoodsVillage.appendChild(addOption);

         let endpoint = url + "getneighborhoodsbyvillage?villId=" + villId;
         let result = fetch(endpoint)
         .then(res => res.json())
         .then(data => data.forEach(x => {
             let item = document.createElement("option");
             item.value = x.id;
             item.innerText = x.name;
             neigborhoodsVillage.appendChild(item);
         }));
     }
     function addNeigborhoodVillageToDb() {
         let endpoint = url + "addneighborhoodbyvillage";
         let input = swal("Shto lagje te re:",{
             content:"input",
         })
         .then((value)=>{
              let sm = document.querySelector("#villages").value;
         fetch(endpoint, {
             headers: {
                 'Accept': 'application/json',
                 'Content-Type': 'application/json'
             },
             method: 'post',
             body: JSON.stringify({ villageId: sm, neighborhoodName: value })
         }).then(() => addNeigborhoodVillageToList(sm));
         });
     }
     //block
     function addBlockToList(userMuniId) {
         blocks.innerHTML = '';
         let chooseOption = document.createElement("option");
         chooseOption.innerText = "Zgjedh bllokun...";
         chooseOption.selected = true;
         chooseOption.disabled = true;
         blocks.appendChild(chooseOption);

         let addOption = document.createElement("option");
         addOption.innerText = "Shto bllok të ri...";
         addOption.value = "shto";
         blocks.appendChild(addOption);

         let endpoint = url + "getblocksbymuni?muniid=" + userMuniId;
         let result = fetch(endpoint)
             .then(res => res.json())
             .then(data => data.forEach(x => {
                 let item = document.createElement("option");
                 item.value = x.id;
                 item.innerText = x.name;
                 blocks.appendChild(item);
             }));
     }
     function addBlockToDb(userMuniId) {
         let endpoint = url + "addblock";
         let input = swal("Shto bllok te ri:",{
             content:"input",
         })
         .then((value)=>{
         fetch(endpoint, {
             headers: {
                 'Accept': 'application/json',
                 'Content-Type': 'application/json'
             },
             method: 'post',
             body: JSON.stringify({ MunicipalityId: userMuniId, blockName: value })
         }).then(() => addBlockToList(userMuniId));
         });
     }
     //street by village
     function addStreetToList(villId) {
         streets.innerHTML = '';
         let chooseOption = document.createElement("option");
         chooseOption.innerText = "Zgjedh rrugen...";
         chooseOption.selected = true;
         chooseOption.disabled = true;
         streets.appendChild(chooseOption);

         let addOption = document.createElement("option");
         addOption.innerText = "Shto rrugë te re...";
         addOption.value = "shto";
         streets.appendChild(addOption);

         let endpoint = url + "getstreetbyvillage?villId=" + villId;
         let result = fetch(endpoint)
             .then(res => res.json())
             .then(data => data.forEach(x => {
                 let item = document.createElement("option");
                 item.value = x.id;
                 item.innerText = x.name;
                 streets.appendChild(item);
             }));
     }
     function addStreetToDb() {
         let endpoint = url + "addstreetbyvillage";
         let input =swal("Shto rruge te re",{
             content:"input",
         })
         .then((value)=>{
    let sm = document.querySelector("#villages").value;
         fetch(endpoint, {
             headers: {
                 'Accept': 'application/json',
                 'Content-Type': 'application/json'
             },
             method: 'post',
             body: JSON.stringify({ villageId: sm, streetName: value })
         }).then(() => addStreetToList(sm));
         });

     }
     //street by neighborhood
     function addStreetNeighborhoodToList(neighId) {
         streetsNeighborhood.innerHTML = '';
         let chooseOption = document.createElement("option");
         chooseOption.innerText = "Zgjedh rrugen...";
         chooseOption.selected = true;
         chooseOption.disabled = true;
         streetsNeighborhood.appendChild(chooseOption);

         let addOption = document.createElement("option");
         addOption.innerText = "Shto rrugë te re...";
         addOption.value = "shto";
         streetsNeighborhood.appendChild(addOption);

         let endpoint = url + "getstreetbyneighborhood?neighId=" + neighId;
         let result = fetch(endpoint)
             .then(res => res.json())
             .then(data => data.forEach(x => {
                 let item = document.createElement("option");
                 item.value = x.id;
                 item.innerText = x.name;
                 streetsNeighborhood.appendChild(item);
             }));
     }
     function addStreetNeighborhoodToDb() {
         let endpoint = url + "addstreetbyneighborhood";
         let input = swal("Shto rruge te re:",{
             content:"input",
         }).
         then((value)=>{
                    let sm = document.querySelector("#neigborhoods").value;
         fetch(endpoint, {
             headers: {
                 'Accept': 'application/json',
                 'Content-Type': 'application/json'
             },
             method: 'post',
             body: JSON.stringify({ neighborhoodId: sm, streetName: value })
         }).then(() => addStreetNeighborhoodToList(sm));

         })
     }
     //poll center by village
     function addPollCenterToList(villId) {
         poll.innerHTML = '';
         let chooseOption = document.createElement("option");
         chooseOption.innerText = "Zgjedh qendren e votimit...";
         chooseOption.selected = true;
         chooseOption.disabled = true;
         poll.appendChild(chooseOption);


         let endpoint = url + "getpollcenterbyvillage?villId=" + villId;
         let result = fetch(endpoint)
             .then(res => res.json())
             .then(data => data.forEach(x => {
                 let item = document.createElement("option");
                 item.value = x.id;
                 item.innerText = x.name;
                 poll.appendChild(item);
             }));
     }
     //poll center by neighborhood
     function addPollCenterNeighborhoodToList(neighId) {
         pollNeighborhood.innerHTML = '';
         let chooseOption = document.createElement("option");
         chooseOption.innerText = "Zgjedh qendren e votimit...";
         chooseOption.selected = true;
         chooseOption.disabled = true;
         pollNeighborhood.appendChild(chooseOption);

         let endpoint = url + "getpollcenterbyneigborhood?neighId=" + neighId;
         let result = fetch(endpoint)
             .then(res => res.json())
             .then(data => data.forEach(x => {
                 let item = document.createElement("option");
                 item.value = x.id;
                 item.innerText = x.name;
                 pollNeighborhood.appendChild(item);
             }));
     }
</script>
    }
}
else if (User.IsInRole("KryetarIFshatit"))
{
    @section Scripts
    {
<script>

         $('#streetByNeighborhood').hide();

        $('#villages').change(function(){
            var selectedNeighborhood = $(this).children('option:selected').val();
            if(selectedNeighborhood != null){
                $('#streetByNeighborhood').hide();
                $('#streetByVillage').show();
            }
        })
        $('#neigborhoodsVillage').change(function(){
            var selectedVillages = $(this).children('option:selected').val();
            if(selectedVillages != null){
                $('#streetByNeighborhood').show();
                $('#streetByVillage').hide();
            }
        })
         $('#pollcenter-neighborhood-container').hide();

        $('#villages').change(function(){
            var selectedVillage = $(this).children('option:selected').val();
            if(selectedVillage != null){
                $('#pollcenter-neighborhood-container').hide();
                $('#pollcenter-villages-container').show();
            }villages
        })
        $('#neigborhoodsVillage').change(function(){
            var selectedNeighborhood = $(this).children('option:selected').val();
            if(selectedNeighborhood != null){
                $('#pollcenter-neighborhood-container').show();
                $('#pollcenter-villages-container').hide();
            }
        });
</script>

<script>
    const url = "https://localhost:7278/api/service/";
     if (document.querySelector("#villages") != undefined)
    {
        getVillages();
    }
    else {
        addNeigborhoodVillageToList(@userVillageId);
        addStreetToList(@userVillageId);
        addPollCenterToList(@userVillageId)
    }
    neigborhoodsVillage.addEventListener('change', event =>{
         if(event.target.value !== "shto")
        {
        addStreetNeighborhoodToList(event.target.value);
         addPollCenterNeighborhoodToList(event.target.value);
        }
        else{

        }
    });
    neigborhoodsVillage.addEventListener('change', event => {
        event.preventDefault()
        if (event.target.value == "shto") {
            addNeigborhoodVillageToDb(@userVillageId);
        }
    });
    streets.addEventListener('change', event => {
        event.preventDefault()
        if (event.target.value == 'shto') {
            addStreetToDb(@userVillageId);
        }
    });
    streetsNeighborhood.addEventListener('change', event => {
        event.preventDefault()
        if (event.target.value == "shto") {
            addStreetNeighborhoodToDb();
        }
    });
    function getVillages(userId){
    let endpoint = url + "getmunis";
    let result = fetch(endpoint)
    .then(res => res.json())
    .then(data => {
        data.forEach(x => {
            let item = document.createElement("option");
            item.value = x.id;
            item.innerText = x.name;
        });
    });
    }
    //neigborhood by village
    function addNeigborhoodVillageToList(userVillageId){
        neigborhoodsVillage.innerHTML = '';
        let chooseOption = document.createElement("option");
        chooseOption.innerText = "Zgjedh lagjen...";
        chooseOption.selected = true;
        chooseOption.disabled = true;
        neigborhoodsVillage.appendChild(chooseOption);

        let addOption = document.createElement("option");
        addOption.innerText = "Shto lagjen e re...";
        addOption.value = "shto";
        neigborhoodsVillage.appendChild(addOption);

        let endpoint = url + "getneighborhoodsbyvillage?villId=" + userVillageId;
        let result = fetch(endpoint)
        .then(res => res.json())
        .then(data => data.forEach(x => {
            let item = document.createElement("option");
            item.value = x.id;
            item.innerText = x.name;
            neigborhoodsVillage.appendChild(item);
        }));
    }
    function addNeigborhoodVillageToDb(userVillageId) {
        let endpoint = url + "addneighborhoodbyvillage";
        let input = swal("Shto lagje te re:",{
            content:"input",
        })
        .then((value)=>{
        fetch(endpoint, {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: 'post',
            body: JSON.stringify({ villageId: userVillageId, neighborhoodName: value })
        }).then(() => addNeigborhoodVillageToList(userVillageId));
        });
    }
    //street by village
    function addStreetToList(userVillageId) {
        streets.innerHTML = '';
        let chooseOption = document.createElement("option");
        chooseOption.innerText = "Zgjedh rrugen...";
        chooseOption.selected = true;
        chooseOption.disabled = true;
        streets.appendChild(chooseOption);

        let addOption = document.createElement("option");
        addOption.innerText = "Shto rrugë te re...";
        addOption.value = "shto";
        streets.appendChild(addOption);

        let endpoint = url + "getstreetbyvillage?villId=" + userVillageId;
        let result = fetch(endpoint)
            .then(res => res.json())
            .then(data => data.forEach(x => {
                let item = document.createElement("option");
                item.value = x.id;
                item.innerText = x.name;
                streets.appendChild(item);
            }));
    }
    function addStreetToDb(userVillageId) {
        let endpoint = url + "addstreetbyvillage";
        let input =swal("Shto rruge te re",{
            content:"input",
        })
        .then((value)=>{
        fetch(endpoint, {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: 'post',
            body: JSON.stringify({ villageId: userVillageId, streetName: value })
        }).then(() => addStreetToList(userVillageId));
        });
    }
    //street by neighborhood
    function addStreetNeighborhoodToList(neighId) {
        streetsNeighborhood.innerHTML = '';
        let chooseOption = document.createElement("option");
        chooseOption.innerText = "Zgjedh rrugen...";
        chooseOption.selected = true;
        chooseOption.disabled = true;
        streetsNeighborhood.appendChild(chooseOption);

        let addOption = document.createElement("option");
        addOption.innerText = "Shto rrugë te re...";
        addOption.value = "shto";
        streetsNeighborhood.appendChild(addOption);

        let endpoint = url + "getstreetbyneighborhood?neighId=" + neighId;
        let result = fetch(endpoint)
            .then(res => res.json())
            .then(data => data.forEach(x => {
                let item = document.createElement("option");
                item.value = x.id;
                item.innerText = x.name;
                streetsNeighborhood.appendChild(item);
            }));
    }
    function addStreetNeighborhoodToDb() {
        let endpoint = url + "addstreetbyneighborhood";
        let input = swal("Shto rruge te re:",{
            content:"input",
        }).
        then((value)=>{
                   let sm = document.querySelector("#neigborhoodsVillage").value;
        fetch(endpoint, {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: 'post',
            body: JSON.stringify({ neighborhoodId: sm, streetName: value })
        }).then(() => addStreetNeighborhoodToList(sm));

        })
    }
    //poll center by village
     function addPollCenterToList(userVillageId) {
         poll.innerHTML = '';
         let chooseOption = document.createElement("option");
         chooseOption.innerText = "Zgjedh qendren e votimit...";
         chooseOption.selected = true;
         chooseOption.disabled = true;
         poll.appendChild(chooseOption);


         let endpoint = url + "getpollcenterbyvillage?villId=" + userVillageId;
         let result = fetch(endpoint)
             .then(res => res.json())
             .then(data => data.forEach(x => {
                 let item = document.createElement("option");
                 item.value = x.id;
                 item.innerText = x.name;
                 poll.appendChild(item);
             }));
     }
     //poll center by neighborhood
     function addPollCenterNeighborhoodToList(neighId) {
         pollNeighborhood.innerHTML = '';
         let chooseOption = document.createElement("option");
         chooseOption.innerText = "Zgjedh qendren e votimit...";
         chooseOption.selected = true;
         chooseOption.disabled = true;
         pollNeighborhood.appendChild(chooseOption);

         let endpoint = url + "getpollcenterbyneigborhood?neighId=" + neighId;
         let result = fetch(endpoint)
             .then(res => res.json())
             .then(data => data.forEach(x => {
                 let item = document.createElement("option");
                 item.value = x.id;
                 item.innerText = x.name;
                 pollNeighborhood.appendChild(item);
             }));
     }
</script>
    }
}
else if (User.IsInRole("AnetarIThjeshte"))
{
    @section Scripts
    {
        <script>

         $('#streetByNeighborhood').hide();

        $('#villages').change(function(){
            var selectedNeighborhood = $(this).children('option:selected').val();
            if(selectedNeighborhood != null){
                $('#streetByNeighborhood').hide();
                $('#streetByVillage').show();
            }
        })
        $('#neigborhoodsVillage').change(function(){
            var selectedVillages = $(this).children('option:selected').val();
            if(selectedVillages != null){
                $('#streetByNeighborhood').show();
                $('#streetByVillage').hide();
            }
        })
         $('#pollcenter-neighborhood-container').hide();

        $('#villages').change(function(){
            var selectedVillage = $(this).children('option:selected').val();
            if(selectedVillage != null){
                $('#pollcenter-neighborhood-container').hide();
                $('#pollcenter-villages-container').show();
            }villages
        })
        $('#neigborhoodsVillage').change(function(){
            var selectedNeighborhood = $(this).children('option:selected').val();
            if(selectedNeighborhood != null){
                $('#pollcenter-neighborhood-container').show();
                $('#pollcenter-villages-container').hide();
            }
        });
</script>
        <script>
             const url = "https://localhost:7278/api/service/";
             if (document.querySelector("#villages") != undefined)
            {
                getVillages();
            }
            else {
                addStreetToList(@userVillageId);
                addPollCenterToList(@userVillageId)
            }
            neigborhoodsVillage.addEventListener('change', event =>{
                 if(event.target.value !== "shto")
                {
                 addStreetNeighborhoodToList(event.target.value);
                 addPollCenterNeighborhoodToList(event.target.value);
                }
                else{

                }
            });
            neigborhoodsVillage.addEventListener('change', event => {
                event.preventDefault()
                if (event.target.value == "shto") {
                    addNeigborhoodVillageToDb(@userVillageId);
                }
            });
            streets.addEventListener('change', event => {
                event.preventDefault()
                if (event.target.value == 'shto') {
                    addStreetToDb(@userVillageId);
                }
            });
            streetsNeighborhood.addEventListener('change', event => {
                event.preventDefault()
                if (event.target.value == "shto") {
                    addStreetNeighborhoodToDb();
                }
            });
            function getVillages(userId){
            let endpoint = url + "getmunis";
            let result = fetch(endpoint)
            .then(res => res.json())
            .then(data => {
                data.forEach(x => {
                    let item = document.createElement("option");
                    item.value = x.id;
                    item.innerText = x.name;
                });
            });
            }
            //street by village
    function addStreetToList(userVillageId) {
        streets.innerHTML = '';
        let chooseOption = document.createElement("option");
        chooseOption.innerText = "Zgjedh rrugen...";
        chooseOption.selected = true;
        chooseOption.disabled = true;
        streets.appendChild(chooseOption);

        let addOption = document.createElement("option");
        addOption.innerText = "Shto rrugë te re...";
        addOption.value = "shto";
        streets.appendChild(addOption);

        let endpoint = url + "getstreetbyvillage?villId=" + userVillageId;
        let result = fetch(endpoint)
            .then(res => res.json())
            .then(data => data.forEach(x => {
                let item = document.createElement("option");
                item.value = x.id;
                item.innerText = x.name;
                streets.appendChild(item);
            }));
    }
    function addStreetToDb(userVillageId) {
        let endpoint = url + "addstreetbyvillage";
        let input =swal("Shto rruge te re",{
            content:"input",
        })
        .then((value)=>{
        fetch(endpoint, {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: 'post',
            body: JSON.stringify({ villageId: userVillageId, streetName: value })
        }).then(() => addStreetToList(userVillageId));
        });
    }
        </script>
    }
}
else
{
    @section Scripts
    {
 @*   <script>
    $(document).ready(function () {

    $(".custom-delete-button").click(function (e) {
    e.preventDefault();
    Swal.fire({
    title: 'A jeni te sigurte?',
    text: "Perdoruesi i fshire nuk mund te rikthehet!",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'Po, fshije!'
    }).then((result) => {
    if (result.isConfirmed) {
    Swal.fire({
    title: 'U fshi me sukses!',
    text: 'Perdoruesi ne fjale u fshi me sukses.',
    icon: 'success',
    showConfirmButton: false,
    timer: 1000
    }).then((result) => {
    /*if (result.isConfirmed) {*/
    this.parentElement.submit();
    /*}*/
    })
    }
    })
    })

    })
    </script>*@
<script>

    $('#neigborhoodsVillage-container').hide();

    $('#villages').change(function(){
        var selectedVillage = $(this).children('option:selected').val();
        if(selectedVillage != null){
            $('#neigborhoods-container').hide();
            $('#neigborhoodsVillage-container').show();
        }
    })
    $('#munis').change(function(){
        var selectedMunis = $(this).children('option:selected').val();
        if(selectedMunis != null){
            $('#neigborhoods-container').show();
            $('#neigborhoodsVillage-container').hide();
        }
    });

     $('#streetByVillage').hide();

    $('#neighborhoods').change(function(){
        var selectedNeighborhood = $(this).children('option:selected').val();
        if(selectedNeighborhood != null){
            $('#streetByVillage').hide();
            $('#streetByNeighborhood').show();
        }
    })
    $('#villages').change(function(){
        var selectedVillages = $(this).children('option:selected').val();
        if(selectedVillages != null){
            $('#streetByVillage').show();
            $('#streetByNeighborhood').hide();
        }
    })

    $('#pollcenter-villages-container').hide();

    $('#neigborhoods').change(function(){
        var selectedVillage = $(this).children('option:selected').val();
        if(selectedVillage != null){
            $('#pollcenter-villages-container').hide();
            $('#pollcenter-neighborhood-container').show();
        }
    })
    $('#villages').change(function(){
        var selectedNeighborhood = $(this).children('option:selected').val();
        if(selectedNeighborhood != null){
            $('#pollcenter-villages-container').show();
            $('#pollcenter-neighborhood-container').hide();
        }
    });
</script>

<script>
        const munis = document.querySelector('#munis');
        const url = "https://localhost:7278/api/service/";
        getMunis();

        munis.addEventListener('change', event => {
            addVillagesToList(event.target.value);
            addNeigborhoodToList(event.target.value);
            addBlockToList(event.target.value);
        });
        villages.addEventListener('change', event=>{
            addNeigborhoodVillageToList(event.target.value);
            addStreetToList(event.target.value);
            addPollCenterToList(event.target.value);
        });
        neigborhoods.addEventListener('change', event =>{
            addStreetNeighborhoodToList(event.target.value);
            addPollCenterNeighborhoodToList(event.target.value);
        });
        villages.addEventListener('change', event => {
            event.preventDefault()
              if (event.target.value == 'shto'){
                addVillageToDb();
            }
        });
        neigborhoods.addEventListener('change', event => {
            event.preventDefault()
              if (event.target.value == 'shto') {
                addNeigborhoodToDb();
                }
        });
        blocks.addEventListener('change', event => {
           event.preventDefault()
              if (event.target.value == 'shto') {
               addBlockToDb();
               }
        });
            streets.addEventListener('change', event => {
                event.preventDefault()
                if (event.target.value == 'shto') {
                    addStreetToDb();
                }
            });
            neigborhoodsVillage.addEventListener('change', event => {
                event.preventDefault()
                if (event.target.value == "shto") {
                    addNeigborhoodVillageToDb();
                }
            });
            streetsNeighborhood.addEventListener('change', event => {
                event.preventDefault()
                if (event.target.value == "shto") {
                    addStreetNeighborhoodToDb();
                }
            });

            function addVillagesToList(muniId) {
                villages.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh fshatin...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                villages.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto fshat te ri...";
                addOption.value = "shto";
                villages.appendChild(addOption);

                let endpoint = url + "getvillagesbymuni?muniid=" + muniId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        villages.appendChild(item);
                    }));
            }
            function addVillageToDb() {
                let endpoint = url + "addvillage";
                let input = swal("Emri i fshatit: ", {
      content: "input",
       buttons: {
                 cancel:"Anulo",
                 
                 confirm:{
                     text:"Shto",
                     className:"test",
                 } }
    })
    .then((value) => {
         //let selectedMuni = $('#munis').val();
                let sm = document.querySelector("#munis").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({ municipalityId: sm, villageName: input })
                }).then(() => addVillagesToList(sm));

    });

            }
            //neigborhoods
            function addNeigborhoodToList(muniId) {
                neigborhoods.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh lagjen...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                neigborhoods.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto lagjen e re...";
                addOption.value = "shto";
                neigborhoods.appendChild(addOption);

                let endpoint = url + "getneighborhoodsbymuni?muniid=" + muniId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        neigborhoods.appendChild(item);
                    }));
            }
            function addNeigborhoodToDb() {
                let endpoint = url + "addneighborhood";
                let input =swal("Emri i lagjes:",{
                        content:"input",
                         buttons: {
                 cancel:"Anulo",
                 
                 confirm:{
                     text:"Shto",
                     className:"test",
                 } }
                    })
                    .then((value)=>{
                          let sm = document.querySelector("#munis").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({ municipalityId: sm, neighborhoodName: value })
                }).then(() => addNeigborhoodToList(sm));
                    });

            }
            //neigborhood by village
            function addNeigborhoodVillageToList(villId) {
                neigborhoodsVillage.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh lagjen...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                neigborhoodsVillage.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto lagjen e re...";
                addOption.value = "shto";
                neigborhoodsVillage.appendChild(addOption);

                let endpoint = url + "getneighborhoodsbyvillage?villId=" + villId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        neigborhoodsVillage.appendChild(item);
                    }));
            }
        function getMunis(id){
            let endpoint = url + "getmunis";
            let result = fetch(endpoint)
            .then(res => res.json())
            .then(data => {
                data.forEach(x => {
                    let item = document.createElement("option");
                    item.value = x.id;
                    item.innerText = x.name;
                    munis.appendChild(item);
                });
            });
        }
        function addVillagesToList(muniId){
            villages.innerHTML = '';
            let chooseOption = document.createElement("option");
            chooseOption.innerText = "Zgjedh fshatin...";
            chooseOption.selected = true;
            chooseOption.disabled = true;
            villages.appendChild(chooseOption);

            let addOption = document.createElement("option");
            addOption.innerText = "Shto fshat te ri...";
            addOption.value = "shto";
            villages.appendChild(addOption);

            let endpoint = url + "getvillagesbymuni?muniid=" + muniId;
            let result = fetch(endpoint)
            .then(res => res.json())
            .then(data => data.forEach(x => {
                let item = document.createElement("option");
                item.value = x.id;
                item.innerText = x.name;
                villages.appendChild(item);
            }));
        }
        function addVillageToDb(){
            let endpoint = url + "addvillage";
            let input =swal("Emri i fshatit:", {
      content: "input",
       buttons: {
                 cancel:"Anulo",
                 
                 confirm:{
                     text:"Shto",
                    
                     className:"test",
                 } }
    })
    .then((value) => {
            let sm = document.querySelector("#munis").value;
            fetch(endpoint, {
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                method: 'post',
                body: JSON.stringify({municipalityId: sm, villageName: value})
            }).then(() => addVillagesToList(sm));
    });

        }
        //neigborhoods
        function addNeigborhoodToList(muniId){
            neigborhoods.innerHTML = '';
            let chooseOption = document.createElement("option");
            chooseOption.innerText = "Zgjedh lagjen...";
            chooseOption.selected = true;
            chooseOption.disabled = true;
            neigborhoods.appendChild(chooseOption);

            let addOption = document.createElement("option");
            addOption.innerText = "Shto lagjen e re...";
            addOption.value = "shto";
            neigborhoods.appendChild(addOption);

            let endpoint = url + "getneighborhoodsbymuni?muniid=" + muniId;
            let result = fetch(endpoint)
            .then(res => res.json())
            .then(data => data.forEach(x => {
                let item = document.createElement("option");
                item.value = x.id;
                item.innerText = x.name;
                neigborhoods.appendChild(item);
            }));
        }
        function addNeigborhoodToDb(){
            let endpoint = url + "addneighborhood";
            let input =swal ("Emri i lagjes:",{
                content:"input",
                 buttons: {
                 cancel:"Anulo",
                 
                 confirm:{
                     text:"Shto",
                     className:"test",
                 } }
            })
            .then((value)=>{
                  let sm = document.querySelector("#munis").value;
            fetch(endpoint, {
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                method: 'post',
                body: JSON.stringify({municipalityId: sm, neighborhoodName: value})
            }).then(() => addNeigborhoodToList(sm));
            });

        }
        //neigborhood by village
        function addNeigborhoodVillageToList(villId){
            neigborhoodsVillage.innerHTML = '';
            let chooseOption = document.createElement("option");
            chooseOption.innerText = "Zgjedh lagjen...";
            chooseOption.selected = true;
            chooseOption.disabled = true;
            neigborhoodsVillage.appendChild(chooseOption);

            let addOption = document.createElement("option");
            addOption.innerText = "Shto lagjen e re...";
            addOption.value = "shto";
            neigborhoodsVillage.appendChild(addOption);

            let endpoint = url + "getneighborhoodsbyvillage?villId=" + villId;
            let result = fetch(endpoint)
            .then(res => res.json())
            .then(data => data.forEach(x => {
                let item = document.createElement("option");
                item.value = x.id;
                item.innerText = x.name;
                neigborhoodsVillage.appendChild(item);
            }));
        }

            function addNeigborhoodVillageToDb() {
                let endpoint = url + "addneighborhoodbyvillage";
                let input = swal("Emri i lagjes:",{
                    content:"input",
                     buttons: {
                 cancel:"Anulo",
                 
                 confirm:{
                     text:"Shto",
                     className:"test",
                 } }
                })
               .then((value)=>{
                   let sm = document.querySelector("#villages").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({ villageId: sm, neighborhoodName: value })
                }).then(() => addNeigborhoodVillageToList(sm));

               });

            }

            //block
            function addBlockToList(muniId) {
                blocks.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh bllokun...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                blocks.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto bllok të ri...";
                addOption.value = "shto";
                blocks.appendChild(addOption);

                let endpoint = url + "getblocksbymuni?muniid=" + muniId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        blocks.appendChild(item);
                    }));
            }

            function addBlockToDb() {
                let endpoint = url + "addblock";
                let input = swal("Emri i bllokut:", {
                    content:"input",
                     buttons: {
                 cancel:"Anulo",
                 
                 confirm:{
                     text:"Shto",
                     className:"test",
                 } }
                })
                .then((value)=>{
                 let sm = document.querySelector("#munis").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({ municipalityId: sm, blockName:value })
                }).then(() => addBlockToList(sm));
                });

            }

            //street by village
            function addStreetToList(villId) {
                streets.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh rrugen...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                streets.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto rrugë te re...";
                addOption.value = "shto";
                streets.appendChild(addOption);

                let endpoint = url + "getstreetbyvillage?villId=" + villId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        streets.appendChild(item);
                    }));
            }
            function addStreetToDb() {
                let endpoint = url + "addstreetbyvillage";
                let input = swal("Emri i rrugës:", {
                    content:"input",
                     buttons: {
                 cancel:"Anulo",
                 
                 confirm:{
                     text:"Shto",
                     className:"test",
                 } }
                })
                .then((value)=>{
                     let sm = document.querySelector("#villages").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({ villageId: sm, streetName: input })
                }).then(() => addStreetToList(sm));
                });

            }
            //street by neighborhood
            function addStreetNeighborhoodToList(neighId) {
                streetsNeighborhood.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh rrugen...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                streetsNeighborhood.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto rrugë te re...";
                addOption.value = "shto";
                streetsNeighborhood.appendChild(addOption);

                let endpoint = url + "getstreetbyneighborhood?neighId=" + neighId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        streetsNeighborhood.appendChild(item);
                    }));
            }
            function addStreetNeighborhoodToDb() {
                let endpoint = url + "addstreetbyneighborhood";
                let input =swal("Emri i rrugës:",{
                    content:"input",
                     buttons: {
                 cancel:"Anulo",
                 
                 confirm:{
                     text:"Shto",
                     className:"test",
                 } }
                })
                .then((value)=>{
                      let sm = document.querySelector("#neigborhoods").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({ neighborhoodId: sm, streetName: value })
                }).then(() => addStreetNeighborhoodToList(sm));
                })

            }
            //poll center by village
            function addPollCenterToList(villId) {
                poll.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh qendren e votimit...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                poll.appendChild(chooseOption);


                let endpoint = url + "getpollcenterbyvillage?villId=" + villId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        poll.appendChild(item);
                    }));
            }
            //poll center by neighborhood
            function addPollCenterNeighborhoodToList(neighId) {
                pollNeighborhood.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh qendren e votimit...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                pollNeighborhood.appendChild(chooseOption);

                let endpoint = url + "getpollcenterbyneigborhood?neighId=" + neighId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        pollNeighborhood.appendChild(item);
                    }));
            }
</script>
}
}





