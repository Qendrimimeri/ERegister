 @using Application.Repository
@using Application.ViewModels
@using Domain.Data.Entities
@{
    Layout = "_DashboardLayout";
}
@model PoliticalOfficalVM;
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> _userManager
@inject IUnitOfWork _unitOfWork;
@{
    var userId = await _userManager.FindByNameAsync(User.Identity.Name);
    var userMuniId = _unitOfWork.ApplicationUser.GetMunicipalityIdOfUser(userId.Id);
}

<style>
        #klasa1:hover{
            cursor: pointer;
        }

        #klasa2:hover{
            cursor: pointer;
        }

 </style>

<section class="section">
 <ul class="nav nav-tabs">
  <li class="nav-item">
    <a class="nav-link active link-secondary"  id="klasa1"  aria-current="page">Regjistro Zyrtarë</a>
  </li>
  <li class="nav-item">
    <a class="nav-link link-secondary" id="klasa2" aria-current="page">Rezultatet e KQZ</a>
  </li>
</ul>
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body p-5" id="">
                    <h5 class="card-title" id="titulli">Krijo llogarinë për zyrtarin e partisë dhe territorin përkatës</h5>
                    <form asp-action="PoliticalOffical" method="post" id="forma">
                           <a><span class="text-danger validation-message" id="validation-message">Ju lutem plotësoni tabelën me rezultatet e KQZ!</span></a>

                        <h6 class="pt-4">I - Të dhënat personale</h6>
                        <hr />
                        <div class="mb-4 d-flex justify-content-between">
                            <div class="col-12 pe-2">
                                <label asp-for="FullName">Emri dhe mbiemri</label>
                                <input asp-for="FullName" class="form-control" id="mbiemripersonal"
                                    placeholder="Shkruaj emrin dhe mbiemrin">
                                <span asp-validation-for="FullName" class="text-danger"></span>
                            </div>
                        </div>
                        <span>Numri i telefonit</span>
                        <div class="mb-4 pe-2">
                            <div class=" d-flex align-items-center">
                                <div class="col-2">
                                    <input type="text" class="form-control" id="prefix" value="+383">
                                </div>
                                <div class="col-10 ps-2">
                                    <input asp-for="PhoneNumber" class="form-control" id="nrtel" type="number">
                                </div>
                            </div>
                                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>

                            <span class="text-danger"></span>
                        </div>
                        <div class="form-group pb-3 pe-2">
                            <label for="exampleInputEmail1" asp-for="Email">Email adresa</label>
                            <input type="email" asp-for="Email" class="form-control" id="exampleInputEmail1"
                                   placeholder="Shkruaj email adresen">
                                   <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                        <div class="mb-4 d-flex justify-content-between flex-md-row flex-column">
                            @if (User.IsInRole("KryetarIPartise"))
                            {
                            <div class="col-md-4 mb-2 pe-2">
                                <label asp-for="Municipality">Qyteti</label>
                                    <select class="form-select" asp-for="Municipality" id="munis">
                                        <option disabled selected>Zgjedh qytetin...</option>
                                    </select>
                                <span asp-validation-for="Municipality" class="text-danger"></span>

                            </div>
                            <div class="col-md-4 mb-2 pe-2">
                                <label asp-for="Village">Fshati</label>
                                <select asp-for="Village" id="villages" class="form-select">
                                    <option disabled selected>Zgjedh fshatin...</option>
                                </select>
                            </div>
                            <div id="neigborhoods-container" class="col-md-4 mb-2 pe-2">
                                <label>Lagja</label>
                                <select class="form-select" asp-for="Neigborhood" id="neigborhoods">
                                    <option disabled selected>Zgjedh lagjen...</option>
                                </select>
                            </div>
                            <div id="neigborhoodsVillage-container" class="col-md-4 mb-2 pe-2">
                                <label>Lagja</label>
                                <select class="form-select" asp-for="Neigborhood" id="neigborhoodsVillage">
                                    <option disabled selected>Zgjedh lagjen...</option>
                                </select>
                            </div>
                            }
                             @if (User.IsInRole("KryetarIKomunes"))
                            {
                                <div class="col-md-6 mb-2 pe-2">
                                    <label asp-for="Village">Fshati</label>
                                    <select asp-for="Village" id="villages" class="form-select">
                                        <option disabled selected>Zgjedh fshatin...</option>
                                    </select>
                                </div>
                               <div id="neigborhoods-container" class="col-md-6 mb-2 pe-2">
                                <label>Lagja</label>
                                <select class="form-select" asp-for="Neigborhood" id="neigborhoods">
                                    <option disabled selected>Zgjedh lagjen...</option>
                                </select>
                            </div>
                            <div id="neigborhoodsVillage-container" class="col-md-6 mb-2 pe-2">
                                <label>Lagja</label>
                                <select class="form-select" asp-for="Neigborhood" id="neigborhoodsVillage">
                                    <option disabled selected>Zgjedh lagjen...</option>
                                </select>
                            </div>
                            }
                            @if (User.IsInRole("KryetariIFshatit"))
                            {
                                <div id="neigborhoodsVillage-container" class="col-md-6 mb-2 pe-2">
                                <label>Lagja</label>
                                <select class="form-select" asp-for="Neigborhood" id="neigborhoodsVillage">
                                    <option disabled selected>Zgjedh lagjen...</option>
                                </select>
                            </div>
                            }
                        </div>


                        <div class="mb-4 d-flex justify-content-between flex-md-row flex-column">

                           <div class="col-md-4 mb-2 pe-2" id="streetByVillage">
                                <label>Rruga</label>
                                <select class="form-select" asp-for="Street" id="streets">
                                    <option disabled selected>Zgjedh rrugën...</option>
                                </select>
                            </div>
                             <div class="col-md-4 mb-2 pe-2" id="streetByNeighborhood">
                                <label>Rruga</label>
                                <select class="form-select" asp-for="Street" id="streetsNeighborhood">
                                    <option disabled selected>Zgjedh rrugën...</option>

                                </select>
                            </div>
                            <div class="col-md-4 mb-2 pe-2">
                                <label asp-for="Block">Blloku</label>
                                <select asp-for="Block" id="blocks" class="form-select"
                                    id="inputGroupSelect04">
                                    <option disabled selected>Zgjedh bllokun...</option>
                                </select>
                            </div>
                            <div class="col-md-4 mb-2 pe-2">
                                <label asp-for="HouseNo">Numri i shtëpisë</label>
                                <input asp-for="HouseNo" class="form-control" placeholder="opsionale">
                                <span asp-validation-for="HouseNo" class="text-danger"></span>
                            </div>
                        </div>
                        <h6 class="pt-4">II - Të dhënat partiake</h6>
                        <hr />
                        <div class="mb-4 d-flex justify-content-between flex-md-row flex-column">
                            <div class="col-md-6 mb-2 pe-2">
                                <label asp-for="Role">Pozita në parti</label>
                                <select asp-for="Role" asp-items="@ViewBag.roles" class="form-select"
                                    id="inputGroupSelect05">
                                    <option disabled selected>Zgjedh rolin...</option>
                                </select>
                                            <span asp-validation-for="Role" class="text-danger"></span>
                                @*<a asp-controller = "Role" asp-action = "AddRoles" class="link-primary">Shto +</a>*@
                            </div>
                            <div class="col-md-6 mb-2 pe-2" id="pollcenter-villages-container">
                                <label asp-for="PollCenter">Qendra e votimit</label>
                                <select asp-for="PollCenter" class="form-select" id="poll">
                                    <option disabled selected>Zgjedh qendren e votimit...</option>

                                </select>
                                <span asp-validation-for="PollCenter" class="text-danger"></span>

                            </div>
                             <div class="col-md-6 mb-2 pe-2" id="pollcenter-neighborhood-container">
                                <label asp-for="PollCenter">Qendra e votimit</label>
                                <select asp-for="PollCenter" class="form-select" id="pollNeighborhood">
                                    <option disabled selected>Zgjedh qendren e votimit...</option>
                                </select>
                                <span asp-validation-for="PollCenter" class="text-danger"></span>
                            </div> 
                        </div>
                       <div class="d-flex flex-row justify-content-end pe-2 pt-3 ">

                        
                           <a asp-action="Cancel" class="btn btn-danger pe-2">Anulo</a>&nbsp &nbsp</a>
                            <button type="submit" formaction="/AddsAdmin/SaveAndClose" id="main-button" class="btn btn-primary pe-2">Ruaj dhe hap rast</button>&nbsp&nbsp

                            <button type="submit" formaction="/AddsAdmin/SaveAndClosePoliticalOfficial" id="second-button" class="btn btn-primary pe-2">Ruaj dhe mbyll</button>


                        </div>
                    </form>

                    @*<div class="col-12" id="table">
                        <h5 class="card-title pt-4">Pershkruaj numrin e votuesve dhe rezultateve nga KQZ</h5>
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th @*scope="col">Numri i votuesëve</th>
                                    <th class="w-50 " @*scope="col">Total : <span id="span" class="float-end"> </span></th>
                                </tr>
                            </thead>
                            <tbody id="">
                                <tr>
                                    <th scope="row">VV</th>
                                    <td id="vv"></td>
                                </tr>
                                <tr>
                                    <th scope="row">LDK</th>
                                    <td id="ldk" class="Votat"></td>
                                </tr>
                                <tr>
                                    <th scope="row">PDK</th>
                                    <td id="pdk" colspan="2" class="Votat"></td>
                                </tr>
                                <tr>
                                    <th scope="row">AAK</th>
                                    <td id="aak" colspan="2" class="Votat"></td>
                                </tr>
                                <tr>
                                    <th scope="row">AKR</th>
                                    <td id="akr" colspan="2" class="Votat"></td>
                                </tr>
                                <tr>
                                    <th scope="row">Nisma</th>
                                    <td id="nisma" colspan="2" class="Votat"></td>
                                </tr>
                                <tr>
                                    <th scope="row">Partite serbe</th>
                                    <td id="serbe" colspan="2" class="Votat"></td>

                                </tr>
                                <tr>
                                    <th scope="row">Partite joserbe</th>
                                    <td id="joserbe" colspan="2" class="Votat"></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>*@

	<div class="" id="table">
                   
		<div class="d-flex flex-row justify-content-between">
             <div class=" pt-4">
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter">
                            Shto nje subjekt politik
                        </button>
                        <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-body">
                                        <form>
                                            <div class="form-group">
                                                <label for="subjekti-politik" class="py-2">Emri i subjektit politik</label>
                                                <input type="text" class="form-control" id="subjekti-politik">
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Anulo</button>
                                                <button type="submit" id="btnCall" onclick="getValue()" class="btn btn-primary">Ruaj edhe mbyll</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                   </div>

			  <div class="col-4">
								<label class="">Lloji i zgjedhjeve</label>
								<select class="form-select" id="inputGroupSelect03" name="zgjedhjet">
									<option disabled selected>Zgjedh llojin e zgjedhjeve...</option>
									<option>Zgjedhjet Nacionale</option>
									<option>Zgjedhjet Lokale</option>
								</select>
                                <span class="text-danger validation-message" >Ju lutem zgjedhni llojin e zgjedhjeve!</span>
							</div>
							<div class="col-4">
								<label class="">Data e zgjedhjeve</label>
								<input type="date" id="year" class="form-control">
								<span class="text-danger validation-message">Ju lutem zgjedhni datën e zgjedhjeve!</span>
							</div>
		</div>

     <div class="col-md-6 w-100 pt-5">
                    <div class="table-responsive">
								<span class="text-danger validation-message">Ju lutem plotësoni tabelën me të dhëna!</span>

                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th scope="col" class="w-50">Partia Politike</th>
                                    <th scope="col" class="w-50">Totali i votave : <span id="span" class="float-end"></span></th>@*Me bo nje formule per me i mbledh te gjitha votat e partive politike*@
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th scope="row" class="parti" value="1">VV</th>
                                    <td><input type="number" class="partyNumber border-0 votat w-100" required /></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="parti" value="2">LDK</th>
                                    <td><input type="number" class="partyNumber border-0 votat w-100" required /></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="parti" value="3">PDK</th>
                                    <td><input type="number" class="partyNumber border-0 votat w-100" required /></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="parti" value="4">AAK</th>
                                    <td><input type="number" class="partyNumber border-0 votat w-100" required /></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="parti" value="5">AKR</th>
                                    <td><input type="number" class="partyNumber border-0 votat w-100" required/></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="parti" value="6">Nisma</th>
                                    <td><input type="number" class="partyNumber border-0 votat w-100" required/></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="parti" value="7">Partite serbe</th>
                                    <td><input type="number" class="partyNumber border-0 votat w-100" required /></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="parti" value="8">Partite joserbe</th>
                                    <td><input type="number" class="partyNumber border-0 votat w-100" required/></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
           
        </div>

    </div>
    </div>
    </div>

</section>


    



@if (User.IsInRole("KryetarIKomunes"))
{
    @section Scripts
    {
    <script>
        

        $('#table').hide();
        $('#neigborhoodsVillage-container').hide();

        $('#villages').change(function(){
            var selectedVillage = $(this).children('option:selected').val();
            if(selectedVillage != null){
                $('#neigborhoods-container').hide();
                $('#neigborhoodsVillage-container').show();
            }
        })
        $('#munis').change(function(){
            var selectedMunis = $(this).children('option:selected').val();
            if(selectedMunis != null){
                $('#neigborhoods-container').show();
                $('#neigborhoodsVillage-container').hide();
            }
        });

         $('#streetByVillage').hide();

        $('#neighborhoods').change(function(){
            var selectedNeighborhood = $(this).children('option:selected').val();
            if(selectedNeighborhood != null){
                $('#streetByVillage').hide();
                $('#streetByNeighborhood').show();
            }
        })
        $('#villages').change(function(){
            var selectedVillages = $(this).children('option:selected').val();
            if(selectedVillages != null){
                $('#streetByVillage').show();
                $('#streetByNeighborhood').hide();
            }
        })

        $('#pollcenter-villages-container').hide();

        $('#neigborhoods').change(function(){
            var selectedVillage = $(this).children('option:selected').val();
            if(selectedVillage != null){
                $('#pollcenter-villages-container').hide();
                $('#pollcenter-neighborhood-container').show();
            }
        })
        $('#villages').change(function(){
            var selectedNeighborhood = $(this).children('option:selected').val();
            if(selectedNeighborhood != null){
                $('#pollcenter-villages-container').show();
                $('#pollcenter-neighborhood-container').hide();
            }
        });
    </script>
    <script>
            const url = "https://localhost:7278/api/service/";
            if (document.querySelector("#munis") != undefined)
            {
                getMunis();
            }
            else {
                addVillagesToList(@userMuniId);
                addNeigborhoodToList(@userMuniId);
                addBlockToList(@userMuniId);
            }
            villages.addEventListener('change', event=>{
                addNeigborhoodVillageToList(event.target.value);
                addStreetToList(event.target.value);
                addPollCenterToList(event.target.value);
            });
            neigborhoods.addEventListener('change', event =>{
                addStreetNeighborhoodToList(event.target.value);
                addPollCenterNeighborhoodToList(event.target.value);
            });
            villages.addEventListener('change', event => {
                event.preventDefault()
                  if (event.target.value == 'shto'){
                    addVillageToDb();
                }
            });
            neigborhoods.addEventListener('change', event => {
                event.preventDefault()
                  if (event.target.value == 'shto') {
                    addNeigborhoodToDb();
                    }
            });
            blocks.addEventListener('change', event => {
               event.preventDefault()
                  if (event.target.value == 'shto') {
                   addBlockToDb();
                   }
            });
            streets.addEventListener('change', event => {
                event.preventDefault()
                if (event.target.value == 'shto') {
                    addStreetToDb();
                }
            });
            neigborhoodsVillage.addEventListener('change', event => {
                event.preventDefault()
                if (event.target.value == "shto") {
                    addNeigborhoodVillageToDb();
                }
            });
            streetsNeighborhood.addEventListener('change', event => {
                event.preventDefault()
                if (event.target.value == "shto") {
                    addStreetNeighborhoodToDb();
                }
            });
            
            function getMunis(userId){
            let endpoint = url + "getmunis";
            let result = fetch(endpoint)
            .then(res => res.json())
            .then(data => {
                data.forEach(x => {
                    let item = document.createElement("option");
                    item.value = x.id;
                    item.innerText = x.name;
                });
            });
            }

            function addVillagesToList(userMuniId) {
                villages.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh fshatin...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                villages.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto fshat te ri...";
                addOption.value = "shto";
                villages.appendChild(addOption);

                let endpoint = url + "GetVillagesByMuni?muniid=" + userMuniId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        villages.appendChild(item);
                    }));
            }
            function addVillageToDb() {
                let endpoint = url + "addvillage";
                let input = prompt("Shto fshatin e ri:");
                //let selectedMuni = $('#munis').val();
                let sm = document.querySelector("#munis").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({ municipalityId: sm, villageName: input })
                }).then(() => addVillagesToList(sm));
            }
            //neigborhoods
            function addNeigborhoodToList(userMuniId) {
                neigborhoods.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh lagjen...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                neigborhoods.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto lagjen e re...";
                addOption.value = "shto";
                neigborhoods.appendChild(addOption);

                let endpoint = url + "getneighborhoodsbymuni?muniId=" + userMuniId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        neigborhoods.appendChild(item);
                    }));
            }
            function addNeigborhoodToDb() {
                let endpoint = url + "addneighborhood";
                let input = prompt("Shto lagjen e re:");
                let sm = document.querySelector("#munis").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({ municipalityId: sm, neighborhoodName: input })
                }).then(() => addNeigborhoodToList(sm));
            }
            //neigborhood by village
            function addNeigborhoodVillageToList(villId) {
                neigborhoodsVillage.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh lagjen...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                neigborhoodsVillage.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto lagjen e re...";
                addOption.value = "shto";
                neigborhoodsVillage.appendChild(addOption);

                let endpoint = url + "getneighborhoodsbyvillage?villId=" + villId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        neigborhoodsVillage.appendChild(item);
                    }));
            }
            function addVillagesToList(muniId){
                villages.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh fshatin...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                villages.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto fshat te ri...";
                addOption.value = "shto";
                villages.appendChild(addOption);

                let endpoint = url + "getvillagesbymuni?muniid=" + muniId;
                let result = fetch(endpoint)
                .then(res => res.json())
                .then(data => data.forEach(x => {
                    let item = document.createElement("option");
                    item.value = x.id;
                    item.innerText = x.name;
                    villages.appendChild(item);
                }));
            }
            function addVillageToDb(){
                let endpoint = url + "addvillage";
                let input = prompt("Shto fshatin e ri:");
                let sm = document.querySelector("#munis").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({municipalityId: sm, villageName: input})
                }).then(() => addVillagesToList(sm));
            }
            //neigborhoods
            function addNeigborhoodToList(muniId){
                neigborhoods.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh lagjen...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                neigborhoods.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto lagjen e re...";
                addOption.value = "shto";
                neigborhoods.appendChild(addOption);

                let endpoint = url + "getneighborhoodsbymuni?muniid=" + muniId;
                let result = fetch(endpoint)
                .then(res => res.json())
                .then(data => data.forEach(x => {
                    let item = document.createElement("option");
                    item.value = x.id;
                    item.innerText = x.name;
                    neigborhoods.appendChild(item);
                }));
            }
            function addNeigborhoodToDb(){
                let endpoint = url + "addneighborhood";
                let input = prompt("Shto lagjen e re:");
                let sm = document.querySelector("#munis").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({municipalityId: sm, neighborhoodName: input})
                }).then(() => addNeigborhoodToList(sm));
            }
            //neigborhood by village
            function addNeigborhoodVillageToList(villId){
                neigborhoodsVillage.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh lagjen...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                neigborhoodsVillage.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto lagjen e re...";
                addOption.value = "shto";
                neigborhoodsVillage.appendChild(addOption);

                let endpoint = url + "getneighborhoodsbyvillage?villId=" + villId;
                let result = fetch(endpoint)
                .then(res => res.json())
                .then(data => data.forEach(x => {
                    let item = document.createElement("option");
                    item.value = x.id;
                    item.innerText = x.name;
                    neigborhoodsVillage.appendChild(item);
                }));
            }

            function addNeigborhoodVillageToDb() {
                let endpoint = url + "addneighborhoodbyvillage";
                let input = prompt("Shto lagjen e re:");
                let sm = document.querySelector("#villages").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({ villageId: sm, neighborhoodName: input })
                }).then(() => addNeigborhoodVillageToList(sm));
            }

            //block
            function addBlockToList(muniId) {
                blocks.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh bllokun...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                blocks.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto bllok të ri...";
                addOption.value = "shto";
                blocks.appendChild(addOption);

                let endpoint = url + "getblocksbymuni?muniid=" + muniId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        blocks.appendChild(item);
                    }));
            }

            function addBlockToDb() {
                let endpoint = url + "addblock";
                let input = prompt("Shto bllok të ri:");
                let sm = document.querySelector("#munis").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({ municipalityId: sm, blockName: input })
                }).then(() => addBlockToList(sm));
            }

            //street by village
            function addStreetToList(villId) {
                streets.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh rrugen...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                streets.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto rrugë te re...";
                addOption.value = "shto";
                streets.appendChild(addOption);

                let endpoint = url + "getstreetbyvillage?villId=" + villId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        streets.appendChild(item);
                    }));
            }
            function addStreetToDb() {
                let endpoint = url + "addstreetbyvillage";
                let input = prompt("Shto rrugen e re:");
                let sm = document.querySelector("#villages").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({ villageId: sm, streetName: input })
                }).then(() => addStreetToList(sm));
            }
            //street by neighborhood
            function addStreetNeighborhoodToList(neighId) {
                streetsNeighborhood.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh rrugen...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                streetsNeighborhood.appendChild(chooseOption);

                let addOption = document.createElement("option");
                addOption.innerText = "Shto rrugë te re...";
                addOption.value = "shto";
                streetsNeighborhood.appendChild(addOption);

                let endpoint = url + "getstreetbyneighborhood?neighId=" + neighId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        streetsNeighborhood.appendChild(item);
                    }));
            }
            function addStreetNeighborhoodToDb() {
                let endpoint = url + "addstreetbyneighborhood";
                let input = prompt("Shto rrugen e re:");
                let sm = document.querySelector("#neigborhoods").value;
                fetch(endpoint, {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({ neighborhoodId: sm, streetName: input })
                }).then(() => addStreetNeighborhoodToList(sm));
            }
            //poll center by village
            function addPollCenterToList(villId) {
                poll.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh qendren e votimit...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                poll.appendChild(chooseOption);


                let endpoint = url + "getpollcenterbyvillage?villId=" + villId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        poll.appendChild(item);
                    }));
            }
            //poll center by neighborhood
            function addPollCenterNeighborhoodToList(neighId) {
                pollNeighborhood.innerHTML = '';
                let chooseOption = document.createElement("option");
                chooseOption.innerText = "Zgjedh qendren e votimit...";
                chooseOption.selected = true;
                chooseOption.disabled = true;
                pollNeighborhood.appendChild(chooseOption);

                let endpoint = url + "getpollcenterbyneigborhood?neighId=" + neighId;
                let result = fetch(endpoint)
                    .then(res => res.json())
                    .then(data => data.forEach(x => {
                        let item = document.createElement("option");
                        item.value = x.id;
                        item.innerText = x.name;
                        pollNeighborhood.appendChild(item);
                    }));
            }
    </script>
    <script>
        function getValue() {
            let value = document.getElementById("subjekti-politik").value;
            const data = { Text: value };
            fetch('https://localhost:7278/api/service/addpoliticalsubject', {
                method: 'POST',
                headers: {
                    Accept: 'application.json',
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
                .then((response) => response.json())
                .then((data) => {
                    console.log('Success:', data);
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
        }
    </script>
    }
}else
{

@section Scripts
{
<script>
    $('#neigborhoodsVillage-container').hide();
    $('#table').hide();

    $('#villages').change(function(){
        var selectedVillage = $(this).children('option:selected').val();
        if(selectedVillage != null){
            $('#neigborhoods-container').hide();
            $('#neigborhoodsVillage-container').show();
        }
    })
    $('#munis').change(function(){
        var selectedMunis = $(this).children('option:selected').val();
        if(selectedMunis != null){
            $('#neigborhoods-container').show();
            $('#neigborhoodsVillage-container').hide();
        }
    });

     $('#streetByVillage').hide();

    $('#neighborhoods').change(function(){
        var selectedNeighborhood = $(this).children('option:selected').val();
        if(selectedNeighborhood != null){
            $('#streetByVillage').hide();
            $('#streetByNeighborhood').show();
        }
    })
    $('#villages').change(function(){
        var selectedVillages = $(this).children('option:selected').val();
        if(selectedVillages != null){
            $('#streetByVillage').show();
            $('#streetByNeighborhood').hide();
        }
    })

    $('#pollcenter-villages-container').hide();

    $('#neigborhoods').change(function(){
        var selectedVillage = $(this).children('option:selected').val();
        if(selectedVillage != null){
            $('#pollcenter-villages-container').hide();
            $('#pollcenter-neighborhood-container').show();
        }
    })
    $('#villages').change(function(){
        var selectedNeighborhood = $(this).children('option:selected').val();
        if(selectedNeighborhood != null){
            $('#pollcenter-villages-container').show();
            $('#pollcenter-neighborhood-container').hide();
        }
    });
</script>
<script>

    $('#table').hide();

    const linku1= document.getElementById('klasa1');
    const linku2 = document.getElementById('klasa2');

    linku1.addEventListener('click', event=>{
        //console.log('u thirr 1');
        event.preventDefault();
        $('#table').hide();
        $('#forma').show();
        $('#titulli').show();
        linku2.classList.remove('active');
        linku1.classList.add('active');
        //linku1.setAttribute('style','background-color: white' );

    });

    linku2.addEventListener('click', event=>{
                //console.log('u thirr 2');

        event.preventDefault();
        $('#forma').hide();
        $('#table').show();
        $('#titulli').hide();
        linku1.classList.remove('active');
        linku2.classList.add('active');
                


    });

    const munis = document.querySelector('#munis');
    const villages = document.querySelector('#villages');
    const url = "https://localhost:7278/api/service/";
    var votat = document.getElementsByClassName('Votat');
    const tabela = document.getElementById('tabela');
    const neigborhoods = document.getElementById('neigborhoods');
    const neigborhoodsVillage = document.getElementById('neigborhoodsVillage');


    //var shuma1=0, shuma2=0, shuma3=0, shuma4=0, shuma5, shuma6,shuma7, shuma8;
    getMunis();
    //getKqzResult();

    async function getKqzResultByMuniId(muniId){
        let shuma1=0, shuma2=0, shuma3=0, shuma4=0, shuma5=0, shuma6=0, shuma7=0, shuma8=0; 
        let endpoint = url + "getkqzresult?muniId="+muniId;
        let result = await fetch(endpoint)
        .then(res => res.json())
        .then(data => {
            data.forEach(x => {

                 //let tr = document.createelement("tr");
                 //let th = document.createelement("th");
                 //let td = document.createelement("td");

                 if(x.politicalSubject==1){
                     shuma1 += x.noOfVotes;
                     console.log(shuma1);

                 }else if(x.politicalSubject==2){
                     shuma2 += x.noOfVotes;
                                          console.log(shuma2);


                 }else if(x.politicalSubject==3){
                     shuma3 += x.noOfVotes;
                                          console.log(shuma3);


                 }else if(x.politicalSubject==4){
                     shuma4 += x.noOfVotes;
                                          console.log(shuma4);


                 }else if(x.politicalSubject==5){
                     shuma5 += x.noOfVotes;
                                          console.log(shuma5);


                 }else if(x.politicalSubject==6){
                     shuma6 += x.noOfVotes;
                                          console.log(shuma6);


                 }else if(x.politicalSubject==7){
                     shuma7 += x.noOfVotes;
                                          console.log(shuma7);


                 }else if(x.politicalSubject==8){
                     shuma8 += x.noOfVotes;
                                          console.log(shuma8);


                 }

                 
                 

                 //th.innerText = x.name;
                 //td.innerText = x.noOfVotes;
                 //tr.appendChild(th);
                 //tr.appendChild(td);
                 //tabela.appendChild(tr);

         
            });
        });


        const vv = document.getElementById('vv');
        const ldk = document.getElementById('ldk');
        const aak = document.getElementById('aak');
        const akr = document.getElementById('akr');
        const nisma = document.getElementById('nisma');
        const serbe = document.getElementById('serbe');
        const joserbe = document.getElementById('joserbe');
        const pdk = document.getElementById('pdk');
        const span = document.getElementById('span');
        
        
        total = shuma1+shuma2+shuma3+shuma4+shuma5+shuma6+shuma7+shuma8;

        vv.innerHTML = shuma1;
        ldk.innerHTML = shuma2;
        pdk.innerHTML = shuma3;
        aak.innerHTML = shuma4;
        akr.innerHTML = shuma5;
        nisma.innerHTML = shuma6;
        serbe.innerHTML = shuma7;
        joserbe.innerHTML = shuma8;
        span.innerHTML = total;



        
    }

       async function getKqzResultByVillageId(muniId){
        let shuma1=0, shuma2=0, shuma3=0, shuma4=0, shuma5=0, shuma6=0, shuma7=0, shuma8=0; 
        let endpoint = url + "getkqzresultbyvillage?muniId="+muniId;
        let result = await fetch(endpoint)
        .then(res => res.json())
        .then(data => {
            data.forEach(x => {


                 if(x.politicalSubject==1){
                     shuma1 += x.noOfVotes;
                     console.log(shuma1);

                 }else if(x.politicalSubject==2){
                     shuma2 += x.noOfVotes;
                                          console.log(shuma2);


                 }else if(x.politicalSubject==3){
                     shuma3 += x.noOfVotes;
                                          console.log(shuma3);


                 }else if(x.politicalSubject==4){
                     shuma4 += x.noOfVotes;
                                          console.log(shuma4);


                 }else if(x.politicalSubject==5){
                     shuma5 += x.noOfVotes;
                                          console.log(shuma5);


                 }else if(x.politicalSubject==6){
                     shuma6 += x.noOfVotes;
                                          console.log(shuma6);


                 }else if(x.politicalSubject==7){
                     shuma7 += x.noOfVotes;
                                          console.log(shuma7);


                 }else if(x.politicalSubject==8){
                     shuma8 += x.noOfVotes;
                                          console.log(shuma8);


                 }

                 
                 

                 //th.innerText = x.name;
                 //td.innerText = x.noOfVotes;
                 //tr.appendChild(th);
                 //tr.appendChild(td);
                 //tabela.appendChild(tr);

         
            });
        });


        const vv = document.getElementById('vv');
        const ldk = document.getElementById('ldk');
        const aak = document.getElementById('aak');
        const akr = document.getElementById('akr');
        const nisma = document.getElementById('nisma');
        const serbe = document.getElementById('serbe');
        const joserbe = document.getElementById('joserbe');
        const pdk = document.getElementById('pdk');
        const span = document.getElementById('span');
        
        
        total = shuma1+shuma2+shuma3+shuma4+shuma5+shuma6+shuma7+shuma8;

        vv.innerHTML = shuma1;
        ldk.innerHTML = shuma2;
        pdk.innerHTML = shuma3;
        aak.innerHTML = shuma4;
        akr.innerHTML = shuma5;
        nisma.innerHTML = shuma6;
        serbe.innerHTML = shuma7;
        joserbe.innerHTML = shuma8;
        span.innerHTML = total;



        
    }

     async function getKqzResultByNeighborhoodId(muniId){
        let shuma1=0, shuma2=0, shuma3=0, shuma4=0, shuma5=0, shuma6=0, shuma7=0, shuma8=0; 
        let endpoint = url + "getkqzresultbyneighborhood?muniId="+muniId;
        let result = await fetch(endpoint)
        .then(res => res.json())
        .then(data => {
            data.forEach(x => {

                 //let tr = document.createelement("tr");
                 //let th = document.createelement("th");
                 //let td = document.createelement("td");

                 if(x.politicalSubject==1){
                     shuma1 += x.noOfVotes;
                     console.log(shuma1);

                 }else if(x.politicalSubject==2){
                     shuma2 += x.noOfVotes;
                                          console.log(shuma2);


                 }else if(x.politicalSubject==3){
                     shuma3 += x.noOfVotes;
                                          console.log(shuma3);


                 }else if(x.politicalSubject==4){
                     shuma4 += x.noOfVotes;
                                          console.log(shuma4);


                 }else if(x.politicalSubject==5){
                     shuma5 += x.noOfVotes;
                                          console.log(shuma5);


                 }else if(x.politicalSubject==6){
                     shuma6 += x.noOfVotes;
                                          console.log(shuma6);


                 }else if(x.politicalSubject==7){
                     shuma7 += x.noOfVotes;
                                          console.log(shuma7);


                 }else if(x.politicalSubject==8){
                     shuma8 += x.noOfVotes;
                                          console.log(shuma8);


                 }


         
            });
        });


        const vv = document.getElementById('vv');
        const ldk = document.getElementById('ldk');
        const aak = document.getElementById('aak');
        const akr = document.getElementById('akr');
        const nisma = document.getElementById('nisma');
        const serbe = document.getElementById('serbe');
        const joserbe = document.getElementById('joserbe');
        const pdk = document.getElementById('pdk');
        const span = document.getElementById('span');
        
        
        total = shuma1+shuma2+shuma3+shuma4+shuma5+shuma6+shuma7+shuma8;

        vv.innerHTML = shuma1;
        ldk.innerHTML = shuma2;
        pdk.innerHTML = shuma3;
        aak.innerHTML = shuma4;
        akr.innerHTML = shuma5;
        nisma.innerHTML = shuma6;
        serbe.innerHTML = shuma7;
        joserbe.innerHTML = shuma8;
        span.innerHTML = total;



        
    }

    munis.addEventListener('change', event => {
        addVillagesToList(event.target.value);
        addNeigborhoodToList(event.target.value);
        addBlockToList(event.target.value);
        getKqzResultByMuniId(event.target.value);
    });
     villages.addEventListener('change', event=>{
        addNeigborhoodVillageToList(event.target.value);
        addStreetToList(event.target.value);
        addPollCenterToList(event.target.value);
        getKqzResultByVillageId(event.target.value);
    });

    neigborhoodsVillage.addEventListener('change', event=> {
        getKqzResultByNeighborhoodId(event.target.value);
        //console.log('u thirr 2');
    });
     neigborhoods.addEventListener('change', event =>{
        addStreetNeighborhoodToList(event.target.value);
        addPollCenterNeighborhoodToList(event.target.value);
        getKqzResultByNeighborhoodId(event.target.value);
        //console.log('u thirr 1');

    });
    villages.addEventListener('change', event => {
        event.preventDefault()
          if (event.target.value == 'shto'){
            addVillageToDb();
        }
    });
     neigborhoods.addEventListener('change', event => {
        event.preventDefault()
        if (event.target.value == 'shto'){
            addNeigborhoodToDb();
        }
    });
    blocks.addEventListener('change', event => {
        event.preventDefault()
        if (event.target.value == 'shto'){
            addBlockToDb();
        }
    });
    streets.addEventListener('change', event => {
        event.preventDefault()
        if (event.target.value == 'shto'){
            addStreetToDb();
        }
    });
    neigborhoodsVillage.addEventListener('change', event => {
        event.preventDefault()
        if(event.target.value == "shto"){
            addNeigborhoodVillageToDb();
        }
    });
    streetsNeighborhood.addEventListener('change', event =>{
        event.preventDefault()
        if(event.target.value == "shto"){
            addStreetNeighborhoodToDb();
        }
    });
    function getMunis(id){
        let endpoint = url + "getmunis";
        let result = fetch(endpoint)
        .then(res => res.json())
        .then(data => {
            data.forEach(x => {
                let item = document.createElement("option");
                item.value = x.id;
                item.innerText = x.name;
                munis.appendChild(item);
            });
        });
        }
    function addVillagesToList(muniId){
        villages.innerHTML = '';
        let chooseOption = document.createElement("option");
        chooseOption.innerText = "Zgjedh fshatin...";
        chooseOption.selected = true;
        chooseOption.disabled = true;
        villages.appendChild(chooseOption);
        let addOption = document.createElement("option");
        addOption.innerText = "Shto fshat te ri...";
        addOption.value = "shto";
        villages.appendChild(addOption);
        let endpoint = url + "getvillagesbymuni?muniid=" + muniId;
        let result = fetch(endpoint)
        .then(res => res.json())
        .then(data => data.forEach(x => {
            let item = document.createElement("option");
            item.value = x.id;
            item.innerText = x.name;
            villages.appendChild(item);
        }));
    }
    function addVillageToDb(){
        let endpoint = url + "addvillage";
        let input = prompt("Shto fshatin e ri:");
        //let selectedMuni = $('#munis').val();
        let sm = document.querySelector("#munis").value;
        fetch(endpoint, {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: 'post',
            body: JSON.stringify({municipalityId: sm, villageName: input})
        }).then(() => addVillagesToList(sm));
    }
    //neigborhoods
    function addNeigborhoodToList(muniId){
        neigborhoods.innerHTML = '';
        let chooseOption = document.createElement("option");
        chooseOption.innerText = "Zgjedh lagjen...";
        chooseOption.selected = true;
        chooseOption.disabled = true;
        neigborhoods.appendChild(chooseOption);

        let addOption = document.createElement("option");
        addOption.innerText = "Shto lagjen e re...";
        addOption.value = "shto";
        neigborhoods.appendChild(addOption);

        let endpoint = url + "getneighborhoodsbymuni?muniid=" + muniId;
        let result = fetch(endpoint)
        .then(res => res.json())
        .then(data => data.forEach(x => {
            let item = document.createElement("option");
            item.value = x.id;
            item.innerText = x.name;
            neigborhoods.appendChild(item);
        }));
    }
    function addNeigborhoodToDb(){
        let endpoint = url + "addneighborhood";
        let input = prompt("Shto lagjen e re:");
        let sm = document.querySelector("#munis").value;
        fetch(endpoint, {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: 'post',
            body: JSON.stringify({municipalityId: sm, neighborhoodName: input})
        }).then(() => addNeigborhoodToList(sm));
    }
    //neigborhood by village
    function addNeigborhoodVillageToList(villId){
        neigborhoodsVillage.innerHTML = '';
        let chooseOption = document.createElement("option");
        chooseOption.innerText = "Zgjedh lagjen...";
        chooseOption.selected = true;
        chooseOption.disabled = true;
        neigborhoodsVillage.appendChild(chooseOption);

        let addOption = document.createElement("option");
        addOption.innerText = "Shto lagjen e re...";
        addOption.value = "shto";
        neigborhoodsVillage.appendChild(addOption);

        let endpoint = url + "getneighborhoodsbyvillage?villId=" + villId;
        let result = fetch(endpoint)
        .then(res => res.json())
        .then(data => data.forEach(x => {
            let item = document.createElement("option");
            item.value = x.id;
            item.innerText = x.name;
            neigborhoodsVillage.appendChild(item);
        }));
        
         function addNeigborhoodVillageToDb() {
            let endpoint = url + "addneighborhoodbyvillage";
            let input = prompt("Shto lagjen e re:");
            let sm = document.querySelector("#villages").value;
            fetch(endpoint, {
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                method: 'post',
                body: JSON.stringify({ villageId: sm, neighborhoodName: input })
            }).then(() => addNeigborhoodVillageToList(sm));
        }
        //block
        function addBlockToList(muniId) {
            blocks.innerHTML = '';
            let chooseOption = document.createElement("option");
            chooseOption.innerText = "Zgjedh bllokun...";
            chooseOption.selected = true;
            chooseOption.disabled = true;
            blocks.appendChild(chooseOption);

            let addOption = document.createElement("option");
            addOption.innerText = "Shto bllok të ri...";
            addOption.value = "shto";
            blocks.appendChild(addOption);

            let endpoint = url + "getblocksbymuni?muniid=" + muniId;
            let result = fetch(endpoint)
                .then(res => res.json())
                .then(data => data.forEach(x => {
                    let item = document.createElement("option");
                    item.value = x.id;
                    item.innerText = x.name;
                    blocks.appendChild(item);
                }));
        }
        function addBlockToDb() {
            let endpoint = url + "addblock";
            let input = prompt("Shto bllok të ri:");
            let sm = document.querySelector("#munis").value;
            fetch(endpoint, {
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                method: 'post',
                body: JSON.stringify({ municipalityId: sm, blockName: input })
            }).then(() => addBlockToList(sm));
        }
        //street by village
        function addStreetToList(villId) {
            streets.innerHTML = '';
            let chooseOption = document.createElement("option");
            chooseOption.innerText = "Zgjedh rrugen...";
            chooseOption.selected = true;
            chooseOption.disabled = true;
            streets.appendChild(chooseOption);

            let addOption = document.createElement("option");
            addOption.innerText = "Shto rrugë te re...";
            addOption.value = "shto";
            streets.appendChild(addOption);

            let endpoint = url + "getstreetbyvillage?villId=" + villId;
            let result = fetch(endpoint)
                .then(res => res.json())
                .then(data => data.forEach(x => {
                    let item = document.createElement("option");
                    item.value = x.id;
                    item.innerText = x.name;
                    streets.appendChild(item);
                }));
        }
        function addStreetToDb() {
            let endpoint = url + "addstreetbyvillage";
            let input = prompt("Shto rrugen e re:");
            let sm = document.querySelector("#villages").value;
            fetch(endpoint, {
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                method: 'post',
                body: JSON.stringify({ villageId: sm, streetName: input })
            }).then(() => addStreetToList(sm));
        }
        //street by neighborhood
        function addStreetNeighborhoodToList(neighId) {
            streetsNeighborhood.innerHTML = '';
            let chooseOption = document.createElement("option");
            chooseOption.innerText = "Zgjedh rrugen...";
            chooseOption.selected = true;
            chooseOption.disabled = true;
            streetsNeighborhood.appendChild(chooseOption);

            let addOption = document.createElement("option");
            addOption.innerText = "Shto rrugë te re...";
            addOption.value = "shto";
            streetsNeighborhood.appendChild(addOption);

            let endpoint = url + "getstreetbyneighborhood?neighId=" + neighId;
            let result = fetch(endpoint)
                .then(res => res.json())
                .then(data => data.forEach(x => {
                    let item = document.createElement("option");
                    item.value = x.id;
                    item.innerText = x.name;
                    streetsNeighborhood.appendChild(item);
                }));
        }
        function addStreetNeighborhoodToDb() {
            let endpoint = url + "addstreetbyneighborhood";
            let input = prompt("Shto rrugen e re:");
            let sm = document.querySelector("#neigborhoods").value;
            fetch(endpoint, {
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                method: 'post',
                body: JSON.stringify({ neighborhoodId: sm, streetName: input })
            }).then(() => addStreetNeighborhoodToList(sm));
        }
    }

    function addNeigborhoodVillageToDb(){
        let endpoint = url + "addneighborhoodbyvillage";
        let input = prompt("Shto lagjen e re:");
        let sm = document.querySelector("#villages").value;
        fetch(endpoint, {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: 'post',
            body: JSON.stringify({villageId: sm, neighborhoodName: input})
        }).then(() => addNeigborhoodVillageToList(sm));
    }
    //block
    function addBlockToList(muniId){
        blocks.innerHTML = '';
        let chooseOption = document.createElement("option");
        chooseOption.innerText = "Zgjedh bllokun...";
        chooseOption.selected = true;
        chooseOption.disabled = true;
        blocks.appendChild(chooseOption);

        let addOption = document.createElement("option");
        addOption.innerText = "Shto bllok të ri...";
        addOption.value = "shto";
        blocks.appendChild(addOption);

        let endpoint = url + "getblocksbymuni?muniid=" + muniId;
        let result = fetch(endpoint)
        .then(res => res.json())
        .then(data => data.forEach(x => {
            let item = document.createElement("option");
            item.value = x.id;
            item.innerText = x.name;
            blocks.appendChild(item);
        }));
    }
    function addBlockToDb(){    
        let endpoint = url + "addblock";
        let input = prompt("Shto bllok të ri:");
        let sm = document.querySelector("#munis").value;
        fetch(endpoint, {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: 'post',
            body: JSON.stringify({municipalityId: sm, blockName: input})
        }).then(() => addBlockToList(sm));
    }
    //street by village
    function addStreetToList(villId){
        streets.innerHTML = '';
        let chooseOption = document.createElement("option");
        chooseOption.innerText = "Zgjedh rrugen...";
        chooseOption.selected = true;
        chooseOption.disabled = true;
        streets.appendChild(chooseOption);

        let addOption = document.createElement("option");
        addOption.innerText = "Shto rrugë te re...";
        addOption.value = "shto";
        streets.appendChild(addOption);

        let endpoint = url + "getstreetbyvillage?villId=" + villId;
        let result = fetch(endpoint)
        .then(res => res.json())
        .then(data => data.forEach(x => {
            let item = document.createElement("option");
            item.value = x.id;
            item.innerText = x.name;
            streets.appendChild(item);
        }));
    }
    function addStreetToDb(){
        let endpoint = url + "addstreetbyvillage";
        let input = prompt("Shto rrugen e re:");
        let sm = document.querySelector("#villages").value;
        fetch(endpoint, {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: 'post',
            body: JSON.stringify({villageId: sm, streetName: input})
        }).then(() => addStreetToList(sm));
    }
    //street by neighborhood
    function addStreetNeighborhoodToList(neighId){
        streetsNeighborhood.innerHTML = '';
        let chooseOption = document.createElement("option");
        chooseOption.innerText = "Zgjedh rrugen...";
        chooseOption.selected = true;
        chooseOption.disabled = true;
        streetsNeighborhood.appendChild(chooseOption);

        let addOption = document.createElement("option");
        addOption.innerText = "Shto rrugë te re...";
        addOption.value = "shto";
        streetsNeighborhood.appendChild(addOption);

        let endpoint = url + "getstreetbyneighborhood?neighId=" + neighId;
        let result = fetch(endpoint)
        .then(res => res.json())
        .then(data => data.forEach(x => {
            let item = document.createElement("option");
            item.value = x.id;
            item.innerText = x.name;
            streetsNeighborhood.appendChild(item);
        }));
    }
    function addStreetNeighborhoodToDb(){
        let endpoint = url + "addstreetbyneighborhood";
        let input = prompt("Shto rrugen e re:");
        let sm = document.querySelector("#neigborhoods").value;
        fetch(endpoint, {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            method: 'post',
            body: JSON.stringify({neighborhoodId: sm, streetName: input})
        }).then(() => addStreetNeighborhoodToList(sm));
    }

    //poll center by village
    function addPollCenterToList(villId){
        poll.innerHTML = '';
        let chooseOption = document.createElement("option");
        chooseOption.innerText = "Zgjedh qendren e votimit...";
        chooseOption.selected = true;
        chooseOption.disabled = true;
        poll.appendChild(chooseOption);

      
        let endpoint = url + "getpollcenterbyvillage?villId=" + villId;
        let result = fetch(endpoint)
        .then(res => res.json())
        .then(data => data.forEach(x => {
            let item = document.createElement("option");
            item.value = x.id;
            item.innerText = x.name;
            poll.appendChild(item);
        }));
    }
    //poll center by neighborhood
    function addPollCenterNeighborhoodToList(neighId){
        pollNeighborhood.innerHTML = '';
        let chooseOption = document.createElement("option");
        chooseOption.innerText = "Zgjedh qendren e votimit...";
        chooseOption.selected = true;
        chooseOption.disabled = true;
        pollNeighborhood.appendChild(chooseOption);

        let endpoint = url + "getpollcenterbyneigborhood?neighId=" + neighId;
        let result = fetch(endpoint)
        .then(res => res.json())
        .then(data => data.forEach(x => {
            let item = document.createElement("option");
            item.value = x.id;
            item.innerText = x.name;
            pollNeighborhood.appendChild(item);
        }));
    }
</script>
<script>
            $('#table').hide();

        const button = document.getElementById('main-button');
        const butoni = document.getElementById('second-button'); 
        const votes = document.getElementsByClassName("votat");
        

        var shuma = 0;
        var input;
        var vlera;

        for(let i=0; i<votes.length; i++){

                votes[i].addEventListener('focus', e => {
                    e.preventDefault();


                    vlera = 0;

                    if(votes[i].value !== '' ){

                        vlera = parseInt(votes[i].value);



                    }

                });

                votes[i].addEventListener('blur', e => {
                    e.preventDefault();

                    input = parseInt(votes[i].value);
                    //console.log("Inputi"+input);



                    if(!isNaN(input)){
                        if (vlera!==0){
                            shuma = shuma - vlera;
                        }
                        shuma += input;
                        span.innerHTML = shuma;

                    }
                    else if(isNaN(input)){
                        shuma = shuma - vlera;
                        span.innerHTML = shuma;

                    }
                 });


        }

                button.addEventListener('click', event => {
             //event.preventDefault();
             addDataToDb();
             //location.reload();

    });

       butoni.addEventListener('click', event => {
             //event.preventDefault();
             addDataToDb();
             //location.reload();

    });

        //const neighborhoodVillage = document.getElementById('neigborhoodsVillage');
        //console.log(neighborhoodVillage);
        //const neigboorhood = document.getElementById('neigborhoods');
        //console.log(neigboorhood);
        //var neighbors;
        //console.log(neighbors);

        //const poll = document.getElementById('poll');
        //console.log(poll);
        //const pollNeighborhood = document.getElementById('pollNeighborhood');
        //console.log(pollNeighborhood);
        //var polls = null;
        //console.log(polls);

      


       function addDataToDb() {
        let endpoint = url + "addkqzresult";

        const munis = document.getElementById('munis');
        const villages = document.getElementById('villages');
        const election = document.getElementById("inputGroupSelect03").value;
        const year = document.getElementById('year');
        //const poll = document.getElementById('poll');
        const neighborhoodVillage = document.getElementById('neigborhoodsVillage');
        console.log(neighborhoodVillage);
        const neigboorhood = document.getElementById('neigborhoods');
        console.log(neigboorhood);
        var neighbors;

        const poll = document.getElementById('poll');
        //console.log(poll);
        const pollNeighborhood = document.getElementById('pollNeighborhood');
        //console.log(pollNeighborhood);
        var polls;
        var villagess;

         if(villages.selectedIndex !== 0) {
             villagess = villages.options[villages.selectedIndex].value;
             
          }
         else{
              villagess = null;
          }


        //var neighbors;
          if(neighborhoodVillage.selectedIndex !== 0) {
             neighbors = neighborhoodVillage.options[neighborhoodVillage.selectedIndex].value;
          }
          else if(neigboorhood.selectedIndex !== 0) {
            neighbors = neigboorhood.options[neigboorhood.selectedIndex].value;
            
          }else{
              neighbors = null;
          }

          if(poll.selectedIndex !== 0) {
             polls = poll.options[poll.selectedIndex].value;
          }
          else if(pollNeighborhood.selectedIndex !== 0) {
            polls = pollNeighborhood.options[pollNeighborhood.selectedIndex].value;
            
            
          }else{
              polls = null;
          }
    
        
        const parti = document.getElementsByClassName("parti");
        const votat = document.getElementsByClassName("votat");
        //let endpoint1 = url + "getpoliticalsubjectbyname?name=" + parti[i].innerHTML;


        for (var i=1; i <= votat.length; i++) {
            //let endpoint1 = url + "getpoliticalsubjectbyname?name=" + parti[i].innerHTML;



            fetch(endpoint, {
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                method: 'post',
                body: JSON.stringify({
                    municipalityId: munis.value, villageId: villagess, neighborhoodId: neighbors,

                    electionType: election, dataCreated: year.value, pollCenterId: polls, politicialSubjectId: i, noOfvotes: votat[i-1].value
                })
            });

        }
    }
</script>
<script>
        function getValue() {
            let value = document.getElementById("subjekti-politik").value;
            const data = { Text: value };
            fetch('https://localhost:7278/api/service/addpoliticalsubject', {
                method: 'POST',
                headers: {
                    Accept: 'application.json',
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
                .then((response) => response.json())
                .then((data) => {
                    console.log('Success:', data);
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
        }
    </script>
    <script>
        document.querySelector(".validation-message").style.display = "none";
        const BreakException = {};
        const forma = document.querySelector("#forma");
        forma.addEventListener("submit", function(e){
            const parties = document.querySelectorAll(".partyNumber");
            try {
                parties.forEach(el => {
                    if (el.value === "") {
                        document.querySelector(".validation-message").style.display = "";
                        e.preventDefault();
                    }
            });
            } catch (err) {
                if (err !== BreakException) throw err;
            }
        });
    </script>
    
}
}

