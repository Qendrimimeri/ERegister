// <auto-generated />
using System;
using Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(ERegisterDBContext))]
    [Migration("20220906205419_Start")]
    partial class Start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Data.Entities.ActualStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ActualStatus", (string)null);
                });

            modelBuilder.Entity("Domain.Data.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BlockId")
                        .HasColumnType("int");

                    b.Property<int?>("HouseNo")
                        .HasColumnType("int");

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<int?>("NeighborhoodId")
                        .HasColumnType("int");

                    b.Property<int?>("PollCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("StreetId")
                        .HasColumnType("int");

                    b.Property<int?>("VillageId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("NeighborhoodId");

                    b.HasIndex("PollCenterId");

                    b.HasIndex("StreetId");

                    b.HasIndex("VillageId");

                    b.HasIndex("WorkId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Domain.Data.Entities.AdministrativeUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AdministrativeUnits");
                });

            modelBuilder.Entity("Domain.Data.Entities.AspNetUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialNetwork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Domain.Data.Entities.Block", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("Domain.Data.Entities.GeneralDemand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GeneralDemands");
                });

            modelBuilder.Entity("Domain.Data.Entities.GeneralDemandsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("GeneralDemandId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("GeneralDemandId");

                    b.HasIndex("UserId");

                    b.ToTable("GeneralDemands_Users", (string)null);
                });

            modelBuilder.Entity("Domain.Data.Entities.GeneralReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GeneralReasons");
                });

            modelBuilder.Entity("Domain.Data.Entities.Help", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ActivitiesYouPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CanYouManage")
                        .HasColumnType("bit");

                    b.Property<bool?>("NeedHelp")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Helps");
                });

            modelBuilder.Entity("Domain.Data.Entities.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Municipalities");
                });

            modelBuilder.Entity("Domain.Data.Entities.Neighborhood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("Neighborhoods");
                });

            modelBuilder.Entity("Domain.Data.Entities.PoliticalSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PoliticalSubjects");
                });

            modelBuilder.Entity("Domain.Data.Entities.PollCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CenterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CenterNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MunicipalitydId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalitydId");

                    b.ToTable("PollCenters");
                });

            modelBuilder.Entity("Domain.Data.Entities.PollRelated", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("FamMembers")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralReasonId")
                        .HasColumnType("int")
                        .HasColumnName("GeneralReasonID");

                    b.Property<int?>("PoliticalSubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecificDemandId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecificReasonId")
                        .HasColumnType("int");

                    b.Property<int?>("SuccessChancesId")
                        .HasColumnType("int")
                        .HasColumnName("SuccessChancesID");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("GeneralReasonId");

                    b.HasIndex("PoliticalSubjectId");

                    b.HasIndex("SpecificDemandId");

                    b.HasIndex("SpecificReasonId");

                    b.HasIndex("SuccessChancesId");

                    b.HasIndex("UserId");

                    b.ToTable("PollRelateds");
                });

            modelBuilder.Entity("Domain.Data.Entities.SpecificDemand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SpecificDemands");
                });

            modelBuilder.Entity("Domain.Data.Entities.SpecificReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SpecificReasons");
                });

            modelBuilder.Entity("Domain.Data.Entities.Street", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StreetSourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("StreetSourceId");

                    b.ToTable("Streets");
                });

            modelBuilder.Entity("Domain.Data.Entities.StreetSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("StreetSources");
                });

            modelBuilder.Entity("Domain.Data.Entities.SuccessChance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SuccessChances");
                });

            modelBuilder.Entity("Domain.Data.Entities.Village", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("Villages");
                });

            modelBuilder.Entity("Domain.Data.Entities.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AdministrativeUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Duty")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkPlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AdministrativeUnitId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("Domain.Data.Entities.Address", b =>
                {
                    b.HasOne("Domain.Data.Entities.Block", "Block")
                        .WithMany("Addresses")
                        .HasForeignKey("BlockId")
                        .HasConstraintName("FK__Addresses__Block__66603565");

                    b.HasOne("Domain.Data.Entities.Municipality", "Municipality")
                        .WithMany("Addresses")
                        .HasForeignKey("MunicipalityId")
                        .HasConstraintName("FK__Addresses__Munic__6383C8BA");

                    b.HasOne("Domain.Data.Entities.Neighborhood", "Neighborhood")
                        .WithMany("Addresses")
                        .HasForeignKey("NeighborhoodId")
                        .HasConstraintName("FK__Addresses__Neigh__656C112C");

                    b.HasOne("Domain.Data.Entities.PollCenter", "PollCenter")
                        .WithMany("Addresses")
                        .HasForeignKey("PollCenterId")
                        .HasConstraintName("FK__Addresses__PollC__68487DD7");

                    b.HasOne("Domain.Data.Entities.Street", "Street")
                        .WithMany("Addresses")
                        .HasForeignKey("StreetId")
                        .HasConstraintName("FK__Addresses__Stree__6754599E");

                    b.HasOne("Domain.Data.Entities.Village", "Village")
                        .WithMany("Addresses")
                        .HasForeignKey("VillageId")
                        .HasConstraintName("FK__Addresses__Villa__6477ECF3");

                    b.HasOne("Domain.Data.Entities.Work", "Work")
                        .WithMany("Addresses")
                        .HasForeignKey("WorkId")
                        .HasConstraintName("FK__Addresses__WorkI__693CA210");

                    b.Navigation("Block");

                    b.Navigation("Municipality");

                    b.Navigation("Neighborhood");

                    b.Navigation("PollCenter");

                    b.Navigation("Street");

                    b.Navigation("Village");

                    b.Navigation("Work");
                });

            modelBuilder.Entity("Domain.Data.Entities.Block", b =>
                {
                    b.HasOne("Domain.Data.Entities.Municipality", "Municipality")
                        .WithMany("Blocks")
                        .HasForeignKey("MunicipalityId")
                        .HasConstraintName("FK__Blocks__Municipa__5070F446");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("Domain.Data.Entities.GeneralDemandsUser", b =>
                {
                    b.HasOne("Domain.Data.Entities.GeneralDemand", "GeneralDemand")
                        .WithMany("GeneralDemandsUsers")
                        .HasForeignKey("GeneralDemandId")
                        .HasConstraintName("FK__GeneralDe__Gener__02FC7413");

                    b.HasOne("Domain.Data.Entities.AspNetUser", "User")
                        .WithMany("GeneralDemandsUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__GeneralDe__UserI__03F0984C");

                    b.Navigation("GeneralDemand");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Data.Entities.Neighborhood", b =>
                {
                    b.HasOne("Domain.Data.Entities.Municipality", "Municipality")
                        .WithMany("Neighborhoods")
                        .HasForeignKey("MunicipalityId")
                        .HasConstraintName("FK__Neighborh__Munic__534D60F1");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("Domain.Data.Entities.PollCenter", b =>
                {
                    b.HasOne("Domain.Data.Entities.Municipality", "Municipalityd")
                        .WithMany("PollCenters")
                        .HasForeignKey("MunicipalitydId")
                        .HasConstraintName("FK__PollCente__Munic__5BE2A6F2");

                    b.Navigation("Municipalityd");
                });

            modelBuilder.Entity("Domain.Data.Entities.PollRelated", b =>
                {
                    b.HasOne("Domain.Data.Entities.GeneralReason", "GeneralReason")
                        .WithMany("PollRelateds")
                        .HasForeignKey("GeneralReasonId")
                        .HasConstraintName("FK__PollRelat__Gener__7C4F7684");

                    b.HasOne("Domain.Data.Entities.PoliticalSubject", "PoliticalSubject")
                        .WithMany("PollRelateds")
                        .HasForeignKey("PoliticalSubjectId")
                        .HasConstraintName("FK__PollRelat__Polit__7A672E12");

                    b.HasOne("Domain.Data.Entities.SpecificDemand", "SpecificDemand")
                        .WithMany("PollRelateds")
                        .HasForeignKey("SpecificDemandId")
                        .HasConstraintName("FK__PollRelat__Speci__7E37BEF6");

                    b.HasOne("Domain.Data.Entities.SpecificReason", "SpecificReason")
                        .WithMany("PollRelateds")
                        .HasForeignKey("SpecificReasonId")
                        .HasConstraintName("FK__PollRelat__Speci__7D439ABD");

                    b.HasOne("Domain.Data.Entities.SuccessChance", "SuccessChances")
                        .WithMany("PollRelateds")
                        .HasForeignKey("SuccessChancesId")
                        .HasConstraintName("FK__PollRelat__Succe__7B5B524B");

                    b.HasOne("Domain.Data.Entities.AspNetUser", "User")
                        .WithMany("PollRelateds")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__PollRelat__UserI__797309D9");

                    b.Navigation("GeneralReason");

                    b.Navigation("PoliticalSubject");

                    b.Navigation("SpecificDemand");

                    b.Navigation("SpecificReason");

                    b.Navigation("SuccessChances");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Data.Entities.Street", b =>
                {
                    b.HasOne("Domain.Data.Entities.Municipality", "Municipality")
                        .WithMany("Streets")
                        .HasForeignKey("MunicipalityId")
                        .HasConstraintName("FK__Streets__Municip__59063A47");

                    b.HasOne("Domain.Data.Entities.StreetSource", "StreetSource")
                        .WithMany("Streets")
                        .HasForeignKey("StreetSourceId")
                        .HasConstraintName("FK__Streets__StreetS__5812160E");

                    b.Navigation("Municipality");

                    b.Navigation("StreetSource");
                });

            modelBuilder.Entity("Domain.Data.Entities.Village", b =>
                {
                    b.HasOne("Domain.Data.Entities.Municipality", "Municipality")
                        .WithMany("Villages")
                        .HasForeignKey("MunicipalityId")
                        .HasConstraintName("FK__Villages__Munici__4D94879B");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("Domain.Data.Entities.Work", b =>
                {
                    b.HasOne("Domain.Data.Entities.AdministrativeUnit", "AdministrativeUnit")
                        .WithMany("Works")
                        .HasForeignKey("AdministrativeUnitId")
                        .HasConstraintName("FK__Works__Administr__60A75C0F");

                    b.Navigation("AdministrativeUnit");
                });

            modelBuilder.Entity("Domain.Data.Entities.AdministrativeUnit", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("Domain.Data.Entities.AspNetUser", b =>
                {
                    b.Navigation("GeneralDemandsUsers");

                    b.Navigation("PollRelateds");
                });

            modelBuilder.Entity("Domain.Data.Entities.Block", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Domain.Data.Entities.GeneralDemand", b =>
                {
                    b.Navigation("GeneralDemandsUsers");
                });

            modelBuilder.Entity("Domain.Data.Entities.GeneralReason", b =>
                {
                    b.Navigation("PollRelateds");
                });

            modelBuilder.Entity("Domain.Data.Entities.Municipality", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Blocks");

                    b.Navigation("Neighborhoods");

                    b.Navigation("PollCenters");

                    b.Navigation("Streets");

                    b.Navigation("Villages");
                });

            modelBuilder.Entity("Domain.Data.Entities.Neighborhood", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Domain.Data.Entities.PoliticalSubject", b =>
                {
                    b.Navigation("PollRelateds");
                });

            modelBuilder.Entity("Domain.Data.Entities.PollCenter", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Domain.Data.Entities.SpecificDemand", b =>
                {
                    b.Navigation("PollRelateds");
                });

            modelBuilder.Entity("Domain.Data.Entities.SpecificReason", b =>
                {
                    b.Navigation("PollRelateds");
                });

            modelBuilder.Entity("Domain.Data.Entities.Street", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Domain.Data.Entities.StreetSource", b =>
                {
                    b.Navigation("Streets");
                });

            modelBuilder.Entity("Domain.Data.Entities.SuccessChance", b =>
                {
                    b.Navigation("PollRelateds");
                });

            modelBuilder.Entity("Domain.Data.Entities.Village", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Domain.Data.Entities.Work", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
